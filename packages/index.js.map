{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./index.js","webpack:///./allPages.js","webpack:///./graph.js","webpack:///./TopBar.js","webpack:///./River.js","webpack:///./addGraphs.js","webpack:///./sort.js","webpack:///./search.js","webpack:///./distance.js","webpack:///./loadUSGS.js","webpack:///./createLegend.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","oldresult","self","addLine","assign","River","sort","navigator","window","addEventListener","serviceWorker","register","ItemHolder","riverarray","map","event","index","loadUSGS","NewList","query","type","reverse","toLowerCase","orderedlist","slice","String","length","normalSearch","advancedSearch","nlist","forEach","plat","plon","distanceto","push","delete","div","document","getElementById","appendChild","TopBar","searchbox","setTimeout","async","position","status","num","progress","setInterval","innerHTML","repeat","Promise","resolve","reject","geolocation","getCurrentPosition","e","output","code","message","alert","clearInterval","coords","latitude","longitude","accuracy","parameters","section","writeup","distance","Number","lat","lon","location","includeUnknown","checked","skill","getAdvancedSearchParameters","root","href","lastIndexOf","link","encodeURI","JSON","stringify","hash","search","decodeURI","parse","styleSheet","styleSheets","console","warn","style","createElement","body","cssRules","CSSMediaRule","darkMode","localStorage","getItem","matchMedia","matches","cssText","darkModeRules","indexOf","split","rule","trim","insertRule","removeRule","error","topnav","className","items","item1","item2","item3","item4","item5","currentPage","item","insertBefore","firstChild","overview_modal","modal_content","overview_modal_close","overview_modal_text","onclick","display","target","RiverOverview","HTMLElement","[object Object]","super","this","cursor","color","textDecoration","text","overviews","innerText","customElements","define","userAgent","includes","GraphName","timeframe","Source","canvas","horizontal","vertical","graphtype","numplace","endcolor","height","width","ctx","getContext","isNaN","undefined","strokeStyle","lineWidth","Math","ceil","min","beginPath","calcvertical","vscale","max","hscale","voffset","hoffset","px","floor","font","fillStyle","grd","createLinearGradient","addColorStop","start","Text","precision","round","toFixed","fillText","formatDate","date","time","getHours","getMinutes","getMonth","getDate","getFullYear","time1","Date","time2","time3","getTime","starttime","endtime","midtime","textAlign","preciplist","fulldayprecip","halfdayprecip","H","Value","V","moveTo","valid","lineTo","stroke","NewSpan","span","addSorting","button","id","Node","parentNode","removeChild","addGraphs","calculateColor","river","options","flow","values","str","parseFloat","currentType","match","cfs","feet","lightness","running","minrun","maxrun","midflow","log10","lowflow","highflow","calculateRatio","low","high","current","log","locate","tags","rating","base","expanded","forceregenerate","finished","AddSpan","normalColor","focusedColor","img","src","alt","usgsNumber","usgsData","usgsarray","data","previous","stop","calculateDirection","usgs","tlat","tlon","aw","rel","padding","nextSibling","elem","addClickHandler","backgroundColor","dispatchEvent","Event","Remove","Code","ToDelete","reset","createcanvas","fillRect","toparts","arr","timestamps","obj","dateTime","addFlowGraph","parts","toDataURL","addTempGraph","temp","addPrecipGraph","precip","simpleSort","list","propertyName","a","b","alphabeticalsort","ratingsort","shift","skillsort","ToNum","method","noData","hasGauge","knownState","concat","runningSort","stringQuery","content","matchCase","stringFilter","skillToNumber","skillFilter","passes","calculateDistance","lambert","locationFilter","maxDistance","lat1","lon1","lat2","hidlat","lon2","hidlon","advanced_search_modal","PI","reducedLat1","atan","tan","reducedLat2","angle","acos","sin","cos","q","sites","val","url","join","now","toISOString","response","fetch","json","timeSeries","obj2","units","variable","variableDescription","sitecode","sourceInfo","siteCode","obj3","siteName","variablecode","variableCode","latestCfs","latestFeet","replacement","replaceChild","updateLegend","clearRect","getComputedStyle","getPropertyValue","fontSize","context","documentElement","clientWidth","gradient","drawColors","drawText","elementOffset","offsetTop","pageYOffset","top","paddingTop","makeSticky"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","'use strict';\n\nrequire(\"./allPages.js\")\n\nself.addLine = require(\"./graph.js\").addLine\n\n//Defines self.TopBar and self.triangle\nObject.assign(self, require(\"./TopBar.js\"))\n\nself.River = require(\"./River.js\").River\n\nself.sort = require(\"./sort.js\").sort\n\n//Defines self.normalSearch and self.advanedSearch\nObject.assign(self, require(\"./search.js\"))\n\nif ('serviceWorker' in navigator) {\n    window.addEventListener('load', function() {\n        navigator.serviceWorker.register('/sw.js');\n    });\n}\n\n\n\n//ItemHolder is a list of all the DOM elements objects. New objects should be pushed into the list. \nself.ItemHolder = []\nriverarray.map(function(event, index) {\n    ItemHolder[index] = new River(index, event)\n})\n\n\n//Fetch data from USGS\n//ItemHolder has been filled, so this can be run here (and needs to be.... Otherwise self.usgsarray is undefined)\nrequire(\"./loadUSGS.js\").loadUSGS()\n\n\nvar oldresult;    \nwindow.NewList = function(query, type, reverse) {\n    if (typeof(query) === \"string\") {\n        query = query.toLowerCase()\n    }\n    //Location searching uses numbers.\n\n    let orderedlist = ItemHolder.slice(0); //Clone the array\n    if (!(String(query).length === 0 || !query || !type)) {\n\n        if (type === \"sort\") {\n            //Obey other filters\n            if (oldresult) {\n                orderedlist = oldresult\n            }\n\n            orderedlist = sort(query, orderedlist, reverse)\n        }\n        if (type === \"normal\") {\n            orderedlist = normalSearch(orderedlist, query)\n        }\n        if (type === \"advanced\") { \n            orderedlist = advancedSearch(orderedlist, query)\n        }    \n        if (type === \"location\") {\n            if (oldresult) {\n                orderedlist = oldresult\n            }\n\n            var nlist = []\n            orderedlist.forEach(function(value){\n                if (value.plat && value.plon) {\n                    if (distanceto(value.plat, value.plon) < query) {\n                        nlist.push(value)\n                    }\n                }\n            })\n            orderedlist = nlist\n        }\n\n\n    }//Closing for if a query is present\n\n    //Clear Current\n    ItemHolder.forEach(function(event) {\n        event.delete()\n    }) \n    //Append New\n    var div = document.getElementById(\"Rivers\")\n    //Everything else    \n    orderedlist.forEach(function(event){\n        div.appendChild(event.create())\n    })\n\n    if (type !== \"sort\") {\n        oldresult = orderedlist\n    }\n}\n\n\ndocument.getElementById(\"Rivers\").appendChild(new TopBar().create())\n//Needs a #Rivers > .riverbutton to get font-size using getComputedStyle\nrequire(\"./createLegend.js\")\n\n\nNewList(\"alphabetical\", \"sort\")\n\n\nlet searchbox = document.getElementById(\"searchbox\")\nsearchbox.addEventListener(\"keydown\", function() {setTimeout(function(){NewList(searchbox.value, \"normal\")}, 20)})\n\n\n//Generate advanced search parameters from menu\nfunction getAdvancedSearchParameters() {\n    let parameters = {}\n\n    parameters.name = {\n        type: document.getElementById(\"nameType\").value,\n        query: document.getElementById(\"nameQuery\").value\n    }\n\n    parameters.section  = {\n        type: document.getElementById(\"sectionType\").value,\n        query: document.getElementById(\"sectionQuery\").value\n    }\n\n    parameters.writeup = {\n        type: document.getElementById(\"writeupType\").value,\n        query: document.getElementById(\"writeupQuery\").value\n    }\n\t\n\t\n\t\n\tlet distance = Number(document.getElementById(\"distanceQuery\").value)\n\t\n\t\t\tlet lat = document.getElementById(\"latitudeQuery\").value\n\t\t\tlet lon = document.getElementById(\"longitudeQuery\").value\n\t\t\t\n\t\t\t//TODO: Parse other latitude and longitude formats\n\t\t\tlat = Number(lat)\n\t\t\tlon = Number(lon)\n\t\n\t\n\t\nif (!(distance > 0) && lat && lon) {\n\talert(\"Distance must be a number greater than 0 to use location sorting\")\n}\nelse if (distance > 0 && !(lat && lon)) {\n\talert(\"You must enter a latitude and longitude (Get the coordinates from GPS by pressing Calculate my Location)\")\n}\nelse if (distance > 0 && lat && lon) {\n\t\t\t\tparameters.location = {\n\t\t\t\t\tlat,\n\t\t\t\t\tlon,\n\t\t\t\t\tdistance,\n\t\t\t\t\tincludeUnknown: document.getElementById(\"includeUnknown\").checked\n\t\t\t\t}\n\t\t\t}\n\t\n\t\n    parameters.skill = {\n        type: \"from\",\n        query: [\n            Number(document.getElementById(\"skillQuery1\").value),\n            Number(document.getElementById(\"skillQuery2\").value)\n        ]\n    }\n\t\n\t\n    return parameters\n}\n\n\nasync function calculateCoordinates() {\n\t\n\tlet status = document.getElementById(\"locationProgress\")\n\tlet num = 0\n\tlet progress = setInterval(function() {\n\t\tnum = (num+1)%6\n\t\tstatus.innerHTML = \"Calculating your Approximate Location (Expect this to take 15-60 seconds)\" + \".\".repeat(num)\n\t}, 500)\n\t\n\tlet position;\n\ttry {\n\t\tposition = await new Promise((resolve, reject) => {\n\t\t\tnavigator.geolocation.getCurrentPosition(resolve, reject)\n\t   });\n\t}\n\tcatch(e) {\n\t\tlet output = \"Error code \" + e.code + \" occoured when getting your location. The error message is: \" + e.message \n\t\talert(output)\n\t\tclearInterval(progress)\n\t\tstatus.innerHTML = output\n\t}\n\n\n\tlet coords = position.coords\n\t\n\t\tclearInterval(progress)\n\t\n\tdocument.getElementById(\"latitudeQuery\").value = coords.latitude\n\tdocument.getElementById(\"longitudeQuery\").value = coords.longitude\n\tstatus.innerHTML = \"You are within \" + coords.accuracy + \" meters of \" + coords.latitude + \" degrees latitude and \" + coords.longitude + \" degrees longitude.\"\n}\n\ndocument.getElementById(\"calculateCoordinates\").addEventListener(\"click\", calculateCoordinates)\n\n\n\n\ndocument.getElementById(\"performadvancedsearch\").addEventListener(\"click\", function() {\n    let query = getAdvancedSearchParameters()\n\n    //Add link to this search\n    //This should run before NewList - otherwise the entire content is added to the object and URL\n    //Find where rivers.run is located\n    //This should allow rivers.run to the run from a directory   \n    let root = window.location.href\n    root = root.slice(0,root.lastIndexOf(\"/\") + 1) //Add 1 so we don't clip trailing slash\n    let link = encodeURI(root + \"#\" + JSON.stringify(query))\n    document.getElementById(\"searchlink\").innerHTML = \"Link to this search: <a href=\\\"\" + link + \"\\\">\" + link + \"</a>\"\n\n    NewList(query, \"advanced\", false) //Currently no options are offered to sort or order advanced search\n})\n\n\n\n\n\n\n\n\n//Check if there is a search query\nif (window.location.hash.length > 0) {\n    let search = decodeURI(window.location.hash.slice(1))\n\n    try {\n        //Do an advanced search if the query if an advanced search\n        let query = JSON.parse(search)\n        \n        //TODO: Set the advanced search areas to the query. \n        \n        NewList(query, \"advanced\")\n\n\n    }\n    catch (e) {\n        //Looks like we have a normal search query\n        document.getElementById(\"searchbox\").value = search\n        NewList(search, \"normal\")\n\t}\n}","//This JavaScript file should run on all pages\n//It defines global CSS rules, allows for forcing dark mode, and\n//defines the river-overview DOM element\n\n\n//This is extremely sensitive to the design of the CSS\n//The @media query must be last rule in first stylesheet for this to work\nlet styleSheet = document.styleSheets[0]\n\nif (!styleSheet) {\n    console.warn(\"No stylesheet available. There must be an existing stylesheet in order for allPages.js to function properly without inline style allowed or without document.body.\")\n    let style = document.createElement(\"style\")\n    document.body.appendChild(style)\n    styleSheet = document.styleSheets[0]\n}\n\n\n//Determine if the user wants dark mode\n//If prefers-color-scheme does not exist, the user needs to manually select dark/light mode\n//If prefers-color-scheme does exist, we follow it, unless the user wants to override it\n\ntry {\n    //Basic checking to make sure we don't mess with/error on pages that don't support dark mode\n    if (styleSheet.cssRules[styleSheet.cssRules.length - 1] instanceof CSSMediaRule) {\n        window.darkMode = localStorage.getItem(\"prefersDarkMode\")\n        //Convert string to boolean\n        if (window.darkMode === \"null\") {window.darkMode = null}\n        if (window.darkMode === \"false\") {window.darkMode = false}\n        if (window.darkMode === \"true\") {window.darkMode = true}\n\n\n        if (window.darkMode === null) {\n            window.darkMode = window.matchMedia('(prefers-color-scheme: dark)').matches\n        }\n\n        //Override browser to engage or disengage dark mode\n        if (window.darkMode === true && window.matchMedia('(prefers-color-scheme: dark)').matches === false) {\n            let cssText = styleSheet.cssRules[styleSheet.cssRules.length-1].cssText\n            //Trim off the @media ... { and trailing }\n            cssText = cssText.slice(cssText.indexOf(\"{\") + 1, -1)\n            let darkModeRules = cssText.split(\"\\n\")\n            for (let i=0;i<darkModeRules.length;i++) {\n                let rule = darkModeRules[i]\n                if (rule.trim() === \"\") {continue}\n                styleSheet.insertRule(rule, styleSheet.cssRules.length)\n            }    \n        }\n\n        if (window.darkMode === false && window.matchMedia('(prefers-color-scheme: dark)').matches === true) {\n            styleSheet.removeRule(styleSheet.cssRules.length - 1)\n        }\n\n        if (window.darkMode) {\n            //Style links so that they are visible in dark mode\n\n            //Unvisited Link\n            styleSheet.insertRule(\"a:link {color: #3333FF;}\", styleSheet.cssRules.length)\n            //Visited link\n            styleSheet.insertRule(\"a:visited {color: purple;}\", styleSheet.cssRules.length)\n            //Hovering over link\n            styleSheet.insertRule(\"a:hover {color: green;}\", styleSheet.cssRules.length)\n            //Quick flash of color when link clicked\n            styleSheet.insertRule(\"a:active {color: red;}\", styleSheet.cssRules.length)\n        }\n    }\n}\ncatch (e) {\n    console.error(e)\n}\n\n\n\n\n\n\n//Make sure I don't hate the font\nstyleSheet.insertRule(\"html body {font-family: Arial, Helvetica, sans-serif}\", styleSheet.cssRules.length)\n\n\n\n\n//Create navigation bar\n//Where rivers.run is located\n//This should allow rivers.run to the run from a directory\nlet root = window.location.href\nroot = root.slice(0,root.lastIndexOf(\"/\") + 1) //Add 1 so we don't clip trailing slash\n\nlet topnav = document.createElement(\"div\")\ntopnav.className = \"topnav\"\n\nlet items = []\n\nlet item1 = document.createElement(\"a\")\nitem1.href = root\nitem1.innerHTML = \"River Info\"\nitems.push(item1)\n\nlet item2 = document.createElement(\"a\")\nitem2.href = root + \"about.html\"\nitem2.innerHTML = \"About\"\nitems.push(item2)\n\nlet item3 = document.createElement(\"a\")\nitem3.href = root + \"FAQ.html\"\nitem3.innerHTML = \"FAQ\"\nitems.push(item3)\n\nlet item4 = document.createElement(\"a\")\nitem4.href = root + \"settings.html\"\nitem4.innerHTML = \"Settings\"\nitems.push(item4)\n\nlet item5 = document.createElement(\"a\")\nitem5.href = root + \"clubs.html\"\nitem5.innerHTML = \"Clubs\"\nitems.push(item5)\n\n\nlet currentPage = window.location.href.slice(root.length)\nif (currentPage.indexOf(\"#\") !== -1) {\n    currentPage = currentPage.slice(0, currentPage.indexOf(\"#\"))\n}\n\n\nfor (let i=0;i<items.length;i++) {\n    let item = items[i]\n\n    let target = item.href.slice(root.length)\t\n\n    if (target === currentPage) {\n        item.className = \"topnavcurrent\"\n    }\n    topnav.appendChild(item)\n}\n\ndocument.body.insertBefore(topnav, document.body.firstChild)\n\n\n\nstyleSheet.insertRule(`\n.topnav {\n    overflow: hidden;\n    background-color: #24b9cc;\n    margin:0px;\n}\n`, styleSheet.cssRules.length)\n\n\nstyleSheet.insertRule(`\n.topnav a {\n    float: left;\n    display: block;\n    color:black;\n    text-align:center;\n    padding: 12px 13px;\n    text-decoration: none; /*Avoid the links being underlined*/\n    font-size: 17px;\n}\n`, styleSheet.cssRules.length)\n\n\n//Make sure the header doesn't go onto multiple lines\nstyleSheet.insertRule(`\n@media screen and (max-width: 386px) {\n    .topnav a {\n        padding: 10px 11px;\n        font-size: 4.3vw;\n    }\n}\n`, styleSheet.cssRules.length)\n\n\nstyleSheet.insertRule(\".topnav a:hover {background-color: #359daa}\", styleSheet.cssRules.length)\nstyleSheet.insertRule(\".topnavcurrent {background-color: #25d1a7}\", styleSheet.cssRules.length)\n\n\n\n\n\n\n\n//The remaining code is for the river-overview tags\n\n//Add the modal styles\nstyleSheet.insertRule(`\n.modal {\ndisplay: none; \nposition:fixed; \nz-index:1; \npadding-top: 5%;\nleft:0;\ntop:0;\nwidth:100%;\nheight: 100%;\noverflow:auto;\nbackground-color: rgba(0,0,0,0.4);\n}`, styleSheet.cssRules.length)\n\nstyleSheet.insertRule(`\n.modal-content {\ncolor:black;\nbackground-color: #fefefe;\nmargin: auto;\npadding: 20px;\nborder: 1px solid #888;\nwidth: 90%;\n}`,styleSheet.cssRules.length)\n\nstyleSheet.insertRule(`\n.modal-close {\ncolor: #aaaaaa;\nfloat: right;\nfont-size: 28px;\nfont-weight: bold;\n}`,styleSheet.cssRules.length)\n\nstyleSheet.insertRule(`\n.modal-close:hover, .modal-close:focus {\ncolor: #000;\ntext-decoration: none;\ncursor: pointer;\n}`,styleSheet.cssRules.length)\n\n\nif (window.darkMode) {\n    styleSheet.insertRule(`\t\n.modal-content {\nbackground-color:black;\ncolor:#cfcfcf;\n}`, styleSheet.cssRules.length)\n}\n\n\n//Create the modal element\nlet overview_modal = document.createElement(\"div\")\noverview_modal.className = \"modal\"\n\nlet modal_content = document.createElement(\"div\")\nmodal_content.className = \"modal-content\"\n\nlet overview_modal_close = document.createElement(\"span\")\noverview_modal_close.className = \"modal-close\"\noverview_modal_close.innerHTML = \"×\"\n\nlet overview_modal_text = document.createElement(\"p\")\n\noverview_modal.appendChild(modal_content)\nmodal_content.appendChild(overview_modal_close)\nmodal_content.appendChild(overview_modal_text)\n\ndocument.body.appendChild(overview_modal)\n\n\n\n//Make the modal disappear when the close button is clicked, or when area outside content is clicked\noverview_modal_close.onclick = function() {\n    overview_modal.style.display = \"none\"\n}\n\nwindow.addEventListener(\"click\", function(event) {\n    if (event.target === overview_modal) {\n        overview_modal.style.display = \"none\"\n    }\n})\n\n\n//Create the river-overview element\nclass RiverOverview extends HTMLElement {\n    constructor() {\n        super();\n\n        function openOverview() {\n            let text = \"This overview (\" + this.innerHTML + \") is not available. This is likely due to a programming or data entry error\"\n            if (window.overviews && window.overviews[this.innerText.trim()]) {\n                text = window.overviews[this.innerText.trim()]\n            }\n\n            overview_modal_text.innerHTML = text\n            overview_modal.style.display = \"block\"\n\n        }\n\n\n        //Style so that text looks like a link/button\n        this.style.cursor = \"pointer\"\n        this.style.color = \"rgb(51, 51, 255)\"\n        this.style.textDecoration = \"underline\"\n\n        this.addEventListener(\"click\", openOverview)\n\n    }\n}\n\ntry {\n    customElements.define('river-overview', RiverOverview);\n}\ncatch (e) {\n    console.error(e)\n    //Alert firefox users about the flag\n    if (navigator.userAgent.includes(\"Firefox\")) {\n        setTimeout(function() {\n            alert(\"In order to view area overviews, you will need a browser that supports DOM customElements. You may be able to enable customElements in about:config\")\n        },4000)\n    }\n}\n","//Graph Code\n//It's Ugly... It should be fixed\n//BUT IT WORKS\n\n//addline(canvas, horizontal, vertical, color, graphtype, numplace)\n\n//canvas - HTML canvas element\n//horizontal - array of horizontal values. Pass 0 and it will evenly space.\n//vertical - array of vertical values\n\n//color - Optional. Color of line. Default black\n//graphtype - Optional. Specify 2 to put 2 lines and 2 scales on one graph. See numplace below\n//numplace - Use only if you are using graphtype = 2. \n//If you specify 0 or do not pass a value, the line's scale will be on the left side of the graph.\n//If you specify 1, the line's scale will be on the right side of the graph.\n\nmodule.exports.addLine = function (GraphName, timeframe, Source, canvas, horizontal, vertical, color, graphtype, numplace) {\n    if (graphtype === 3) {\n        var endcolor = numplace\n        }\n    if (graphtype !== 2) {\n        numplace = 0\n    }\n    var height = canvas.height*0.80\n    var width = canvas.width\n\n    var ctx = canvas.getContext('2d');  \n\n\n\n    if (!isNaN(Number(horizontal))) {\n        horizontal = []\n        for (var i = 0;i<vertical.length;i++) {\n            horizontal.push(i*width)\n        }\n    }\n    if (horizontal.length !== vertical.length) {\n        console.warn(\"Uneven amount of datapoints. \" + horizontal.length + \" horizontal points found, but \" + vertical.length + \" vertical points found.\")\n    }\n\n    if (color === undefined) {\n        color = \"#000000\"\n    }\n    ctx.strokeStyle = color\n    ctx.lineWidth = Math.ceil(Math.min(width, height)/120)\n    ctx.beginPath();\n\n    if (graphtype === 2) {\n        width = width*0.86\n    }\n    else {\n        width = width*0.93\n    }\n\n    var calcvertical = []\n    for (var i = 0;i<vertical.length;i++) {\n        if (!isNaN(Number(vertical[i])) && (vertical[i]) !== \"\") {\n            calcvertical.push(vertical[i])\n        }\n        //else {\n        //This is a valid warning - It just got TOO ANNOYING\n        //console.warn(\"Element \" + i + \" in list is an invalid number. It had a value of: \" + vertical[i])\n        //}\n    }\n\n    var vscale = Math.max(...calcvertical) - Math.min(...calcvertical)\n    var hscale = Math.max(...horizontal) - Math.min(...horizontal)\n    vscale = height/vscale\n    hscale = width/hscale\n    var voffset = Math.min(...calcvertical)\n    var hoffset = Math.min(...horizontal)\n\n    hoffset -= (Math.max(...horizontal) - Math.min(...horizontal))*0.07\n\n    var px = Math.floor(((canvas.width)*0.07)/2.6)\n    ctx.font = (px + 'px serif')\n    if (color.length === 9) {\n        color = color.slice(0,7)\n    }\n    ctx.fillStyle = color\n    if (graphtype === 3) {\n        var grd = ctx.createLinearGradient(0, 0, 0, height);\n        grd.addColorStop(0, color);   \n        grd.addColorStop(1, endcolor);\n        ctx.strokeStyle = grd;\n        ctx.fillStyle = grd;\n    }    \n\n    if (numplace === 0 || numplace === undefined) {\n        var start = 1\n        }\n    else {\n        var start = canvas.width-(canvas.width*0.07)\n        }\n    for(var i = 1;i<11;i++) {\n        var Text = ((Math.max(...calcvertical) - Math.min(...calcvertical))*((i-1)/10))+Math.min(...calcvertical)\n\n        let precision = Math.max(0, 3-String(Math.round(Text)).length)\n\n        Text = Number(Text.toFixed(precision))\n\n        ctx.fillText(Text, start, (height*(11-i))/10-5);\n    }\n\n    //Top one\n    Text = ((Math.max(...calcvertical) - Math.min(...calcvertical))*((i-1)/10))+Math.min(...calcvertical)\n\n    let precision = Math.max(0, 3-String(Math.round(Text)).length)\n\n    Text = Number(Text.toFixed(precision))\n\n    ctx.fillText(Text, start, 27);\n\n\n\n\n\n    var px = Math.floor(((canvas.width)*0.07)/2.8)\n    ctx.font = (px + 'px serif')\n    if (color.length === 9) {\n        color = color.slice(0,7)\n    }\n\n\n    if (!window.darkMode) {\n        ctx.fillStyle = \"black\"\n    }\n    else {\n        //Dark Mode\n        ctx.fillStyle = \"#cccccc\"\n    }    \n\n\n\n    function formatDate(date) {\n        var time = String(date.getHours())\n\n        if (date.getHours() < 10) {\n            time += \"0\"\n        }\n        time += \":\" + date.getMinutes()\n        if (date.getMinutes() < 10) {\n            time += \"0\"\n        }\n        time += \" \" + (date.getMonth()+1) + \"/\" + date.getDate() + \"/\" +date.getFullYear()\n        return time\n    }\n\n    var time1 = new Date(timeframe[0])\n    var time2 = new Date(timeframe[timeframe.length - 1])\n    var time3 = new Date(((time2-time1)/2)+time1.getTime())\n\n    var starttime = formatDate(time1)\n    var endtime = formatDate(time2)\n    var midtime = formatDate(time3)\n\n    ctx.fillText(starttime, 10, (canvas.height*(11/12))-(canvas.height*0.06)-12)\n\n    ctx.textAlign = \"end\"; \n    ctx.fillText(endtime, canvas.width-10, (canvas.height*(11/12))-(canvas.height*0.06)-12)\n\n    ctx.textAlign = \"center\"; \n    ctx.fillText(midtime, canvas.width/2, (canvas.height*(11/12))-(canvas.height*0.06)-12)\n\n    ctx.textAlign = \"start\";     \n\n\n\n    var px = Math.floor(((canvas.width)*0.07)/2.4)\n    ctx.font = (px + 'px serif')\n    ctx.fillStyle = color\n    //We need to create a gradient for just the text \"Water Temperature (F)\"\n    if (graphtype === 3) {\n        var grd = ctx.createLinearGradient(0, height, 200, height);\n        grd.addColorStop(0, color);   \n        grd.addColorStop(1, endcolor);\n        ctx.strokeStyle = grd;\n        ctx.fillStyle = grd;\n    }\n\n    if (graphtype === 2) {\n        if (numplace === 0 || numplace === undefined) {\n            ctx.fillText(\"Flow (Cubic Feet/Second)\", start+5, (canvas.height*(11/12)));    \n        }\n        else {\n            ctx.textAlign = \"right\"; \n            ctx.fillText(\"Gauge Height (Feet)\", start-5, (canvas.height*(11/12)));\n            ctx.textAlign = \"start\"; \n        } \n    }\n    else if (graphtype === 3) {\n        ctx.fillText(\"Water Temperature (°F)\", start+5, (canvas.height*(11/12)));    \n    }\n    else {\n        if (GraphName === \"Precipitation\") {\n            ctx.fillText(\"Precipitation (Inches)\", start+5, (canvas.height*(11/12))); \n            var fulldayprecip = 0\n            var halfdayprecip = 0\n            var preciplist = vertical.slice(-96)\n            var preciplist = preciplist.map(Number)\n            //convert strings to numbers\n            preciplist.forEach(function(value){\n                fulldayprecip += value\n            })\n            preciplist = preciplist.slice(-48)\n            preciplist.forEach(function(value){\n                halfdayprecip += value\n            })\n\n            fulldayprecip = fulldayprecip.toFixed(2)\n            halfdayprecip = halfdayprecip.toFixed(2)\n\n            ctx.fillText(\"Last 24 Hours: \" + fulldayprecip + \" in\", canvas.width-700, (canvas.height*(11/12))); \n            ctx.fillText(\"Last 12 Hours: \" + halfdayprecip + \" in\", canvas.width-330, (canvas.height*(11/12))); \n        }\n        else if (GraphName === \"cfs\") {\n            ctx.fillText(\"Flow (Cubic Feet/Second)\", start+5, (canvas.height*(11/12)));    \n        }\n        else if (GraphName === \"height\") {\n            ctx.fillText(\"Gauge Height (Feet)\", start+5, (canvas.height*(11/12)));    \n        }\n        else {\n            ctx.fillText(\"Labeling Error...\", start+5, (canvas.height*(11/12)));    \n        }    \n    }\n\n    //set it back    \n    if (graphtype === 3) {\n        //The area that actually has the graph is the top 80% height wise\n        var grd = ctx.createLinearGradient(0, 0, 0, canvas.height*0.8);\n        grd.addColorStop(0, color);   \n        grd.addColorStop(1, endcolor);\n        ctx.strokeStyle = grd;\n        ctx.fillStyle = grd;\n    }\n\n    if (!window.darkMode) {\n        ctx.fillStyle = \"black\"\n    }\n    else {\n        //Dark Mode\n        ctx.fillStyle = \"#cccccc\"\n    }\n\n    ctx.textAlign = \"center\"; \n    ctx.fillText(Source, canvas.width/2 , canvas.height-10);  \n    ctx.textAlign = \"start\"; \n\n\n\n\n    function H(Value) {\n        return Math.round((Value-hoffset)*hscale)\n    }\n\n    function V(Value) {\n        return Math.round(height-((Value-voffset)*vscale))\n    }\n\n\n    for (var p = 0;p<Math.min(vertical.length, horizontal.length);p++) {\n        if (!isNaN(Number(vertical[p])) && vertical[p] !== \"\") {\n            ctx.moveTo(H(horizontal[p]), V(vertical[p]))\n            break;\n        }    \n    }\n\n\n    var valid = 1\n\n    for (var i = p;i<Math.min(vertical.length, horizontal.length);i++) {\n        if (!isNaN(Number(vertical[i])) && vertical[i] !== \"\") {\n            if (valid === 1) {\n                ctx.lineTo(H(horizontal[i]), V(vertical[i]))\n            }\n            else {\n                ctx.moveTo(H(horizontal[i]), V(vertical[i])+10)\n                ctx.lineTo(H(horizontal[i]), V(vertical[i]))\n                valid = 1\n            }\n        }\n        else {\n            valid = 0\n        }\n    }\n\n\n    ctx.stroke();\n    ctx.beginPath()\n\n    ctx.lineWidth = Math.ceil(ctx.lineWidth/10)\n\n    if (!window.darkMode) {\n        ctx.strokeStyle = \"000000AA\"\n    }\n    else {\n        //Dark Mode\n        ctx.strokeStyle = \"#ccccccAA\"\n    }\n\n    for (var i = 1;i<11;i++) {\n        ctx.moveTo(0, height*(11-i)/10)\n        ctx.lineTo(canvas.width, height*(11-i)/10)\n    }\n    ctx.stroke()\n}    \n","function NewSpan(Text) {\n    let span = document.createElement(\"span\")\n    span.className = \"riverspan\"\n    span.innerHTML = Text\n    return span\n}\n\nfunction addSorting(span, type) {\n    span.onclick = function() {\n        if (this.value === 1) {\n            NewList(type, \"sort\", true) //Reversed\n            this.value = 0\n        }\n        else {\n            NewList(type, \"sort\")\n            this.value = 1\n        }\n    }\n}\n\n\nfunction TopBar() {\n    this.create = function() {\n        let button = document.createElement(\"button\")\n        button.id = \"topbar\"\n        button.className = \"riverbutton\"\n\n\n        let span = NewSpan(\"River⇅\")\n        addSorting(span, \"alphabetical\")\n        span.value = 1//Starts sorted alphabetically, a-z. The first sort needs to reverse that.\n        button.appendChild(span)\n\n        button.appendChild(NewSpan(\"Section\"))\n\n        span = NewSpan(\"Skill⇅\")\n        addSorting(span, \"skill\")\n        span.value = 0\n        button.appendChild(span) \n\n        span = NewSpan(\"Rating⇅\")\n        addSorting(span, \"rating\")\n        span.value = 1 //We want greatest first, not least first, on the first sort\n        button.appendChild(span) \n\n        span = NewSpan(\"Flow Info/Trend⇅\")\n        addSorting(span, \"running\")\n        span.value = 1 //Show highest flow first, instead of lowest\n        button.appendChild(span)\n\n        return button\n    }\n\n    this.delete = function() {\n        let Node = document.getElementById(\"topbar\")\n        if (Node) {\n            Node.parentNode.removeChild(Node)\n        }\n    }\n}\n\n\nmodule.exports = {\n    TopBar\n}\n","\nlet addGraphs = require(\"./addGraphs.js\").addGraphs\n\n\n\nfunction addClickHandler(button, locate) {\n    //Code that runs when the button is clicked\n    button.onclick = function () {\n        let river = ItemHolder[locate]\n        if (river.expanded === 0) {\n            river.expanded = 1\n            var div = document.createElement(\"div\")\n            div.innerHTML = river.writeup + \"<br><br>\"\n\n            if (river.plat && river.plon) {\n                div.innerHTML += \"Put-In GPS Coordinates: \" + river.plat + \", \" + river.plon + \"<br>\"\n            }\n\n            if (river.tlat && river.tlon) {\n                div.innerHTML += \"Take-Out GPS Coordinates: \" + river.tlat + \", \" + river.tlon + \"<br>\"\n            }\n            \n            let values = [\"minrun\", \"lowflow\", \"midflow\", \"highflow\", \"maxrun\"]\n            for (let i=0;i<values.length;i++) {\n                let name = values[i]\n                if (river[name]) {\n                    div.innerHTML += name + \":\" + river[name] + \" \"\n                }\n            }\n            \n\n            if (river.aw) {\n                //Adding to div.innerHTML works, but logs CSP errors\n                div.appendChild(document.createElement(\"br\"))\n                let link = document.createElement(\"a\")\n                link.target = \"_blank\"\n                link.rel = \"noopener\"\n                link.href = \"https://www.americanwhitewater.org/content/River/detail/id/\" + river.aw\n                link.innerHTML = \"Click here to view this river on American Whitewater\"\n                div.appendChild(link)\n            }\n\n            //USGS data may not have loaded yet\n            if (self.usgsarray) {\n                data = self.usgsarray[river.usgs] \n                addGraphs(div, data)\n            }\n\n            div.style.padding = \"6px\"\n            div.id = river.base + 2\n            button.parentNode.insertBefore(div, button.nextSibling)\n        }\n        else {\n            river.expanded = 0\n            var elem = document.getElementById(river.base + 2)\n            if (elem) {\n                elem.parentNode.removeChild(elem)\n            }\n\n        }        \n    }    \n}\n\n\n\n\nfunction calculateDirection(usgsNumber) {\n    let usgsData = usgsarray[usgsNumber]\n    if (usgsData) {\n        let data;\n\n        if (usgsData[\"00060\"]) {data = usgsData[\"00060\"].values}\n        else if (usgsData[\"00065\"]) {data = usgsData[\"00065\"].values}\n\n        if (data) {\n            let current;\n            let previous;\n\n            //We will go back 4 datapoints (1 hour) if possible. \n            //Do this because USGS sometimes does 1 hour intervals instead of 15 minutes\n            let stop = Math.max(data.length-5, 0)\n            for (let i=data.length;i>stop;i--) {\n                let item = data[i]\n                if (!item) {continue}\n                let value = item.value\n                if (!current) {\n                    current = value\n                }\n                else {\n                    previous = value\n                }\n            }\n\n            if (current > previous) {\n                //Water level rising\n                return \"⬆\"\n            }\n            else if (previous > current) {\n                //Water level falling\n                return \"⬇\"\n            }\n            else if (current === previous) {\n                //Water level stable\n                return \"-\"\n            }\n\n        }\n    }\n    return; //If we got here, there is not enough USGS data. \n}\n\n\n\n\nfunction calculateColor(river, options) {\n    //hsla color values\n    //hsl(hue, saturation, lightness, opacity)\n    //Saturation hue is 0 red 120 green 240 blue\n    //Saturation - use 100%\n    //Lightness - use 50%\n    //Opacity - Percentage\n    \n    \n    //Defines river.running\n    //0-4\n    //0 is too low, 4 is too high, other values in between\n\n\n    let values = [\"minrun\", \"lowflow\", \"midflow\", \"highflow\", \"maxrun\"]\n\n    let type; //Currently, we skip a value if one datapoint is cfs and another feet\n\n    for (let i=0;i<values.length;i++) {\n\n        let str = river[values[i]]\n        if (!str) {\n            values[i] = undefined\n            continue;\n        }\n\n        str = str.trim()\n        let value = parseFloat(str)\n        let currentType = str.match(/[^\\d|.]+/) //Match the integer or decimal number\n\n        if (currentType) {\n            currentType = currentType[0].trim() //Match a string of non-digits\n        }\n\n        if (!type && currentType) {\n            type = currentType\n        }\n        else if (type === currentType) {}\n        else {\n            console.warn(values[i] + \" on \" + river.name + \" \" + river.section + \" has a different extension and has been skipped\")\n            values[i] = undefined\n            continue;\n        }\n\n        values[i] = value\n    }\n\n    let flow;\n    if (type === \"cfs\") {\n        flow = river.cfs\n    }\n    else if (type === \"feet\" || type===\"ft\") {\n        flow = river.feet\n    }\n\n    let lightness = (options && options.lightness) || \"50%\"\n\n\n    //Use or equal to\n    //While that technically may not be correct, it makes no significant difference\n    //In addition, values equal to minrun or maxrun result in a river.running of 0 or 4\n    //Meaning that they may be included in the middle of a darker highlighted rivers\n    //When sorting by runnability is used.\n    \n    //It would be better if rivers that are too high or too low are still given river.running values \n    //related to their level. This would also help in determining if something is just barely\n    //too low, and may come up with rain, or is truely too low.\n    \n    if (flow <= values[0]) {\n        //Too low\n        river.running = 0\n        let lightness = (options && options.lightness) || \"50%\"\n        return \"hsl(0,100%,\" + lightness + \",60%)\"\n    }\n    else if (flow >= values[4]) {\n        //Too high\n        river.running = 4\n        return \"hsl(240,100%,\" + lightness + \",60%)\"\n    }\n    else {\n        //If we don't have some values, fill them in using logarithms\n        //TODO: Do some analyzsis and figure out the best way to do these calculations\n\n        let minrun = values[0]\n        let maxrun = values[4]\n        let midflow = values[2] || 10**((Math.log10(minrun) + Math.log10(maxrun))/2)\n        let lowflow = values[1] || 10**((Math.log10(minrun) + Math.log10(midflow))/2)\n        let highflow = values[3] || 10**((Math.log10(midflow) + Math.log10(maxrun))/2)\n\n        //We display these so people can tell what values the computer has generated.\n        river.lowflow = parseFloat(lowflow.toFixed(3)) + type\n        river.midflow = parseFloat(midflow.toFixed(3)) + type\n        river.highflow = parseFloat(highflow.toFixed(3)) + type\n\n        function calculateRatio(low, high, current) {\n            low = Math.log(low)\n            high = Math.log(high)\n\n            current = Math.log(current)\n\n\n            let range = high-low\n            let value = current-low\n\n            return value/range\n\n        }\n        \n        if (flow < lowflow) {\n            river.running = calculateRatio(minrun, lowflow, flow)\n        }\n        else if (flow < midflow) {\n            river.running = 1+calculateRatio(lowflow, midflow, flow)\n        }\n        else if (flow < highflow) {\n            river.running = 2+calculateRatio(midflow, highflow, flow)\n        }\n        else {\n            river.running = 3+calculateRatio(highflow, maxrun, flow)\n        }\n        \n        return \"hsl(\" + (0 + 60*river.running) + \",100%,\" + lightness + \",30%\"\n    }\n}\n\n\n\n\n\n\n\nmodule.exports.River = function(locate, event) {\n\n    //Copies name, section, skill, rating, writeup, tags, usgs, plat,plon, tlat,tlon, aw\n    Object.assign(this, event)\n    //tags needs to be a string. It can't be undefined\n    this.tags = this.tags || \"\"\n    //Convert the numeric value to the filename\n    switch (Number(this.rating)) {\n        case 1:\n            this.rating = \"1Star\";\n            break;\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n            this.rating = event.rating + \"Stars\";\n            break;\n        default:\n            this.rating = \"Error\"\n    }\n    if (!this.rating) {\n        this.rating = \"Error\"\n    }\n\n\n    this.base = \"b\" + locate\n    this.expanded = 0\n    this.index = locate\n\n\n    this.create = function (forceregenerate) {\n        //Only create the button once - It's about 3 times faster.\n        if (!this.finished || forceregenerate) {\n\n            var button = document.createElement(\"button\")\n            button.id = this.base + 1\n\n            button.normalColor = window.darkMode ? \"\" : \"\" //Inherit from CSS\n            button.focusedColor = window.darkMode ? \"#333333\" : \"#e3e3e3\"\n\n            function AddSpan(text) {\n                let span = document.createElement(\"span\")\n                span.innerHTML = text\n                span.className = \"riverspan\"\n                button.appendChild(span)\n                return span\n            }\n\n            AddSpan(this.name)\n            AddSpan(this.section)\n            AddSpan(this.skill)\n\n            //Star images for rating\n            if (this.rating === \"Error\") {\n                AddSpan(\"???\") \n            }\n            else {\n                let img = document.createElement(\"img\")\n                img.src = \"resources/\" + this.rating + \".png\"\n                img.alt = this.rating[0] + \" Stars\"\n                img.className = \"starimg\"\n                let span = document.createElement(\"span\")\n                span.appendChild(img)\n                span.className = \"riverspan\"\n                button.appendChild(span)\n            }\n\n            if (this.flow) {\n                let flowSpan = AddSpan(this.flow + \" \" + calculateDirection(this.usgs))\n                if (this.minrun && this.maxrun) {\n                    button.normalColor = calculateColor(this)\n                    button.focusedColor = window.darkMode ?  calculateColor(this, {lightness:\"75%\"}) : calculateColor(this, {lightness:\"35%\"})\n                }\n            }\n\n\n\n            button.className = \"riverbutton\"\n            //Add the click handler\n            addClickHandler(button, locate)\n\n\n            button.addEventListener(\"mouseover\", function(){this.style.backgroundColor = this.focusedColor})\n            button.addEventListener(\"mouseout\", function(){this.style.backgroundColor = this.normalColor})\n\n\n            //Make content available to Googlebot for indexing\n            if (navigator.userAgent.toLowerCase().indexOf(\"google\") !== -1) {\n                try {\n                    setTimeout(function(){button.dispatchEvent(new Event(\"click\"))}, 100)\n                }\n                catch(e) {}\n            }\n            //The code directly above this is used to allow Googlebot to index content. \n            //Shall it result in an SEO hit, or shall Googlebot be improved to handle content inside of JavaScript,\n            //It can safely be removed.    \n\n\n            //Store button for reuse later   \n            this.finished = button\n\n        }    \n\n        this.finished.style.backgroundColor = this.finished.normalColor\n\n        //Return finished button\n        return this.finished\n\n    }\n\n\n    this.delete = function () {\n        let river = ItemHolder[locate]\n        function Remove(Code) {\n            let ToDelete = document.getElementById(river.base + Code)\n            if (ToDelete) {\n                ToDelete.parentNode.removeChild(ToDelete)\n            }\n        }\n\n        //Reset background color\n        let reset = document.getElementById(river.base + 1)\n        if (reset) {\n            reset.style.backgroundColor = \"\"\n        }\n\n        Remove(2)\n        Remove(1)   \n\n    } \n}\n\n","\n//Auxillary Function\n//Creates the canvas used by each of the graphs\nfunction createcanvas() {\n    let canvas = document.createElement(\"canvas\")\n    canvas.width = 1200\n    canvas.height = 800 \n\n    //Make sure the background is not transparent\n    let ctx = canvas.getContext(\"2d\");\n    if (!window.darkMode) {\n        ctx.fillStyle = \"white\";\n    }\n    else {\n        //Dark Mode\n        ctx.fillStyle = \"black\"\n    }\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    return canvas\n}\n\n\n//Auxillary Function\nfunction toparts(arr) {\n    let values = []\n    let timestamps = []\n\n    for (let i=0;i<arr.length;i++) {\n        let obj = arr[i]\n        values.push(obj.value)\n        timestamps.push(obj.dateTime)\n    }\n\n    return {values:values,timestamps:timestamps}\n}\n\n\nfunction addFlowGraph(div, cfs, height) {\n    //Make sure we actually have some data, and don't create an empty graph\n    if (!(cfs || height)) {return}\n\n    let canvas = createcanvas()\n    //Time to create a dual lined graph!\n    if (cfs && height) {\n        let parts = toparts(cfs.values)\n        addLine(\"cfs\", parts.timestamps, data.name, canvas, 0, parts.values, \"#00AAFFa0\", 2)\n        parts = toparts(height.values)\n        addLine(\"height\", parts.timestamps, data.name, canvas, 0, parts.values, \"#2222FFa0\", 2, 1)                \n    }\n    //We won't have both cfs and height. Draw a single line graph for whichever we have.\n    else if (cfs) {\n        let parts = toparts(cfs.values)\n        addLine(\"cfs\", parts.timestamps, data.name, canvas, 0, parts.values, \"#00AAFF\")\n    }\n    else {\n        let parts = toparts(height.values)\n        addLine(\"height\", parts.timestamps, data.name, canvas, 0, parts.values, \"#2222FF\")    \n    }\n\n    //For some reason, only the last canvas was showing. Use images\n    //Images also allow \"Save Image As\"\n    let img = document.createElement(\"img\")\n    img.className = \"graph\"\n    //Blobs may be faster - but I don't know of a synchronus method\n    img.src = canvas.toDataURL(\"image/png\")\n\n    div.appendChild(img)\n}\n\n\nfunction addTempGraph(div, temp) {\n    if (temp) {\n        let canvas = createcanvas()\n\n        let parts = toparts(temp.values)\n        addLine(\"\", parts.timestamps, data.name, canvas, 0, parts.values, \"#FF0000\", 3, \"#0000FF\")\n\n        //For some reason, only the last canvas was showing. Use images\n        //Images also allow \"Save Image As\"\n        let img = document.createElement(\"img\")\n        img.className = \"graph\"\n        img.src = canvas.toDataURL(\"image/png\")\n        div.appendChild(img)\n    }\n}\n\n\n\nfunction addPrecipGraph(div, precip) {\n    if (precip) {\n        let canvas = createcanvas() \n\n        let parts = toparts(precip.values)\n        addLine(\"Precipitation\", parts.timestamps, data.name, canvas, 0, parts.values, \"#0066FF\")\n\n        //For some reason, only the last canvas was showing. Use images\n        //Images also allow \"Save Image As\"\n        let img = document.createElement(\"img\")\n        img.className = \"graph\"\n        img.src = canvas.toDataURL(\"image/png\")\n        div.appendChild(img)\n    }\n}\n\n\nmodule.exports.addGraphs = function(div, data) {\n\n    //Avoid erroring\n    if (!data) {\n        return;\n    }\n\n    //The graphing is wrapped in a try-catch statement because USGS often supplies invalid data\n    //for a specific river due to gauge problems.\n    //Each canvas is wrapped individually because sometimes only some graphs have invalid data\n\n    let temp = data[\"00010\"]\n    let precip = data[\"00045\"]\n    let cfs = data[\"00060\"]\n    let height = data[\"00065\"]\n\n\n    \n    div.innerHTML += \"<br><br><p class=\\\"pixel18 center\\\"><strong>Disclaimer: USGS Gauge data is provisional, and <em>MIGHT</em> be incorrect. Use at your own risk.</strong></p>\"\n\n    \n\n\n    try {\n        addFlowGraph(div, cfs, height)\n    }\n    catch(e){console.warn(\"Error creating flow graph: \" + e)}\n\n    try {\n        addTempGraph(div, temp)\n    }\n    catch(e){console.warn(\"Error creating temperature graph: \" + e)}\n\n    try {\n        addPrecipGraph(div, precip)\n    }\n    catch(e){console.warn(\"Error creating precipitation graph: \" + e)}\n}\n","function simpleSort(list, propertyName) {\n    list.sort(function(a,b) {\n        if (a[propertyName] > b[propertyName]) {\n            return 1;\n        }\n        if (a[propertyName] < b[propertyName]) {\n            return -1;\n        }\n        return 0;\n    })\n    return list\n}\n\n\nfunction alphabeticalsort(list, reverse) {\n    list = simpleSort(list, \"name\")\n\n    if (reverse) {\n        list.reverse()\n    }\n\n    return list\n}\n\nfunction ratingsort(list, reverse) {\n    list = simpleSort(list, \"rating\")\n\n    if (reverse) {\n        list.reverse()\n    }\n    //Move error values to end\n    while (list[0].rating === \"Error\") {\n        list.push(list.shift())\n    }  \n    return list\n}\n\n\nfunction skillsort(list, reverse) {\n    list.sort(function(a,b) {\n\n        function ToNum(value) {\n\n            switch (value.skill) {\n                case \"FW\":\n                    value = 1;\n                    break;\n                case \"B\":\n                    value = 2;\n                    break;\n                case \"N\":\n                    value = 3;\n                    break;\n                case \"LI\":\n                    value = 4;\n                    break;\n                case \"I\":\n                    value = 5;\n                    break;\n                case \"HI\":\n                    value = 6;\n                    break;\n                case \"A\":\n                    value = 7;\n                    break;\n                case \"E\":\n                    value = 8;\n                    break;\n                default:\n                    value = 9;\n            }\n            return value\n        }       \n        return ToNum(a)-ToNum(b)\n    })\n\n\n    if (reverse) {\n        list.reverse()\n        while (list[0].skill === \"?\") {\n            list.push(list.shift())\n        }\n    }\n\n    return list\n}\n\n\n\nfunction runningSort(list, reverse) {\n    \n    let noData = []\n    let hasGauge = []\n    let knownState = []\n    \n    list.forEach((item) => {\n        if (item.running !== undefined) {knownState.push(item)}\n        //If there is gauge data, the user may be able to determine level themselves\n        //As such, put rivers with gauges second\n        else if (item.flow) {hasGauge.push(item)}\n        else {noData.push(item)}\n    })\n    \n    knownState = simpleSort(knownState, \"running\")\n    \n    if (reverse) {\n        knownState.reverse()\n    }\n    \n    if (knownState.length === 0) {\n        alert(\"Flow data has not yet loaded.\")\n        return list\n    }    \n\n    knownState = knownState.concat(hasGauge)\n    knownState = knownState.concat(noData)\n\n    return knownState\n}\n\n\n\n\n\nfunction sort(method, list, reverse) {\n    if (method === \"alphabetical\") {\n        list = alphabeticalsort(list, reverse)\n    }\n    else if (method === \"rating\") {\n        list = ratingsort(list, reverse)\n    }\n    else if (method === \"skill\") {\n        list = skillsort(list, reverse)\n    }\n    else if (method === \"running\") {\n        list = runningSort(list, reverse)      \n    }\n    else {\n        throw \"Unknown sorting method \" + method\n    }\n    return list\n}\n\n\nmodule.exports = {\n    ratingsort,\n    alphabeticalsort,\n    skillsort,\n    sort\n}","function normalSearch(list, query) {\n    let l = [[],[],[],[],[]]\n    list.forEach(function(event){\n        if(event.tags.toLowerCase().indexOf(query) !== -1) {\n            if (event.name.toLowerCase().indexOf(query) !== -1) {\n                l[0].push(event)\n            }\n            else {\n                l[1].push(event)\n            }\n        }\n        else if (event.name.toLowerCase().indexOf(query) !== -1) {\n            l[2].push(event)\n        }\n        else if (event.section.toLowerCase().indexOf(query) !== -1) {\n            l[3].push(event)\n        }\n        else if (event.writeup.toLowerCase().indexOf(query) !== -1) {\n            l[4].push(event)\n        }\n    })\n\n    list = l[0].concat(l[1],l[2],l[3])\n\n    //Add the less relevant results below\n    list = list.concat(l[4])\n\n    return list\n}\n\n\n\n\n\n\n\n\n\n\n\nfunction stringQuery(parameters) {\n\n    let content = parameters.content\n    let query = parameters.query\n\n    //Ignore case by default\n    if (!parameters.matchCase) {\n        content = content.toLowerCase()\n        query = query.toLowerCase()\n    }\n\n    if (parameters.type === \"contains\") {\n        return content.includes(query)\n    }\n    else if (parameters.type === \"matches\") {\n        return content === query\n    }\n    else {\n        throw \"Unknown Search Type \" + parameters.type\n    }\n}\n\n\nfunction stringFilter(list, property, parameters) {\n    //Filter out the elements that fail the test\n    //Since we may be deleting elements in the list, items will be skipped if we use array.length\n    for (let item in list) {\n        parameters.content = list[item][property]\n        let passes = stringQuery(parameters)\n        if (!passes) {\n            //Remove the item if it fails\n            delete list[item]\n        }\n    }\n    return list\n}\n\n\n\nfunction skillToNumber(skill) {\n    let value\n    switch (skill) {\n        case \"FW\":\n            value = 1;\n            break;\n        case \"B\":\n            value = 2;\n            break;\n        case \"N\":\n            value = 3;\n            break;\n        case \"LI\":\n            value = 4;\n            break;\n        case \"I\":\n            value = 5;\n            break;\n        case \"HI\":\n            value = 6;\n            break;\n        case \"A\":\n            value = 7;\n            break;\n        case \"E\":\n            value = 8;\n    }\n    return value\n}\n\n\n\n\n\n\nfunction skillFilter(list, parameters) {\n\n    let query = parameters.query\n    let type = parameters.type\n\n    let min = Math.min(query[0], query[1])\n    let max = Math.max(query[0], query[1])\n\n    if (type !== \"from\") {throw \"Unknown search type\" + type}\n\n    for (let item in list) {\n\n        let passes = false;\n        let skill = skillToNumber(list[item].skill)\n\n        if (min <= skill && skill <= max) {\n            passes = true\n            console.log(min, skill, max)\n        }\n\n\n\n        if (!passes) {\n            //Remove the item if it fails\n            delete list[item]\n        }\n    }\t\n}\n\n\n\n\n\n\n\n\n\n\nfunction ratingFilter(list, parameters) {\n\n}\n\n\n\n\nlet calculateDistance = require(\"./distance.js\").lambert //Lambert formula\n\nfunction locationFilter(list, parameters) {\n\n    let maxDistance = parameters.distance\n    let lat1 = parameters.lat\n    let lon1 = parameters.lon\n\n    //Filter out the elements that fail the test\n    //Since we may be deleting elements in the list, items will be skipped if we use array.length\n    for (let item in list) {\n        let river = list[item]\n\n        let lat2 = river.plat || river.tlat || river.hidlat\n        let lon2 = river.plon || river.tlon || river.hidlon\n\n        let passes;\n        if (lat2 && lon2) {\n            let distance = calculateDistance(lat1, lon1, lat2, lon2)\n\n            passes = distance < maxDistance\n        }\n        else {\n            //TODO: If we only have one of two coordinates, we may still be able to eliminate it\n            passes = parameters.includeUnknown\n        }\n\n        if (!passes) {\n            //Remove the item if it fails\n            delete list[item]\n        }\n    }\n    return list\n\n}\n\n//Query is in form of:\n//{\n//  name: {\n//    type: \"matches\",\n//    query: \"potomac\"\n//},\n//section: {\n//    type: \"contains\",\n//    query: \"something\"\n//  },\n// skill: {\n//\ttype:\"\" //easier harder exactly from\n//\tvalue: 3 //An array of 2 if from\n//from is inclusive (From medium to hard)\n//},\n//location:{\n//\tdistance: 100 //Maximum distance in miles\n//\tlat: 78//Starting latitude\n//\tlon:-56 //Starting londitude\n//\tincludeUnknown: false //Do not eliminate if location not known \n//}\n//}\n\n\n\n//This doesn't work for difficulty and rating - no greater than or equal to.\n//That needs to be added\nfunction advancedSearch(list, query) {\n    //List is the array of river elements that we are searching\n    //Query is the search parameters\n    console.log(query)\n\n    for (let property in query) {\n        //Iterate through each part of the query\n\n        let parameters = query[property]\n\n\n        if ([\"name\", \"section\", \"writeup\"].includes(property)) {\n            stringFilter(list, property, parameters)\n        }\n        else if (property === \"skill\") {\n            skillFilter(list, parameters)\n        }\n        else if (property === \"rating\") {\n            ratingFilter(list, parameters)\n        }\n        else if (property === \"location\") {\n            locationFilter(list, parameters)\n        }\n        else if (property === \"sort\") {\n\n        }\n        else {\n            alert(\"Unable to search based on \" + property)\n        }\n\n\n\n\n\n    }\n\n    return list\n}\n\n\n\n\n\n\nmodule.exports = {\n    normalSearch,\n    advancedSearch\n}\n\n\n\n\n\n\n//Prepare the Advanced Search button\nlet advanced_search_modal = document.getElementById('advanced-search-modal');\n\nlet span = document.getElementById(\"advanced-search-modal-close\").onclick = function() {\n    advanced_search_modal.style.display = \"none\"\n}\n\nwindow.addEventListener(\"click\", function(event) {\n    if (event.target === advanced_search_modal) {\n        advanced_search_modal.style.display = \"none\"\n    }\n})\n\ndocument.getElementById(\"advancedsearch\").addEventListener(\"click\", function() {\n    advanced_search_modal.style.display = \"block\"\n})\n\n\n\n\n","function lambert(lat1, lon1, lat2, lon2) {\n\t//Should be accurate to <100 meters\n\t\n\t//Parameters from WGS-84\n\tlet radius = 3963.1905919430524 //Equatorial radius in miles\n\tlet flattening = 0.0033528106647474805\n\n\tlat1 = lat1 * Math.PI / 180\n\tlon1 = lon1 * Math.PI / 180\n\tlat2 = lat2 * Math.PI / 180\n\tlon2 = lon2 * Math.PI / 180\n\n\tlet ratio = 1-flattening\n\t\n\tlet reducedLat1 = Math.atan(ratio*Math.tan(lat1))\n\tlet reducedLat2 = Math.atan(ratio*Math.tan(lat2))\n\t\n    //Spherical Law of Cosines\n\tlet angle = Math.acos(Math.sin(reducedLat1) * Math.sin(reducedLat2) + Math.cos(reducedLat1) * Math.cos(reducedLat2) * Math.cos(lon2-lon1))\n\t\n\tlet p = (reducedLat1+reducedLat2)/2\n\tlet q = (reducedLat2-reducedLat1)/2\n\tlet x = (angle - Math.sin(angle)) * (((Math.sin(p)**2)*(Math.cos(q)**2))/(Math.cos(angle/2)**2))\n\tlet y = (angle + Math.sin(angle)) *(((Math.cos(p)**2)*(Math.sin(q)**2))/(Math.sin(angle/2)**2))\n\treturn radius*(angle-((flattening/2)*(x+y)))\t\n}\n\n\nmodule.exports = {\n  lambert\n}\n","self.usgsarray = {} \n\nmodule.exports.loadUSGS = async function() {\n    \n    var sites = []\n    for (let i=0;i<riverarray.length;i++) {\n        let val = riverarray[i].usgs\n        //Check for accuracy\n        if (val && val.length > 7 && val.length < 16) {\n            sites.push(val)\n        }\n    }\n    let url = \"https://waterservices.usgs.gov/nwis/iv/?format=json&sites=\" + sites.join(\",\") +  \"&startDT=\" + new Date(Date.now()-1000*86400).toISOString()  + \"&parameterCd=00060,00065,00010,00045&siteStatus=all\"\n\n    let response = await fetch(url)\n    let usgsdata = await response.json()    \n\n    //Iterate through all known conditions\n    usgsdata.value.timeSeries.forEach(function(event){\n        let obj2 = {}\n        obj2.values = event.values[0].value //The values - ex. Gauge Height Array\n      \n        if (obj2.values.length === 0) {\n          console.log(\"Empty Array. Skipping\")\n          return;\n        }\n      \n        obj2.units = event.variable.variableDescription //Units of values\n        \n        let sitecode = event.sourceInfo.siteCode[0].value\n        //See if the site is already in the array.\n        //If the site code is not in the array, add it. \n        if (!usgsarray[sitecode]) {\n            let obj3 = {}\n            obj3.name = event.sourceInfo.siteName\n            usgsarray[sitecode] = obj3\n        }\n      \n        let variablecode = event.variable.variableCode[0].value\n\n        //Convert celcius to farenheight\n        if (variablecode === \"00010\" && obj2.units === \"Temperature, water, degrees Celsius\") {\n          for (let i=0;i<obj2.values.length;i++) {\n            obj2.values[i].value = obj2.values[i].value * 1.8 + 32\n          }\n          \n          obj2.units = \"Temperature, water, degrees Fahrenheit\"\n        }\n      \n         \n        //Add the values onto the site code object\n        usgsarray[sitecode][variablecode] = obj2\n    })\n  \n    //Add USGS Data to Graph\n    for (let i=0;i<ItemHolder.length;i++) {\n      let item = ItemHolder[i]\n      let data = usgsarray[item.usgs]\n      \n      if (data) {\n        let cfs = data[\"00060\"]\n        let feet = data[\"00065\"]\n        \n        //Prevent \"TypeError: Can't Read Property 'values' of undefined\"\n        if (cfs) {cfs = cfs.values}\n        if (feet) {feet = feet.values}\n\n\t\t  \n\t\tlet latestCfs, latestFeet;\n\t\tif (cfs) {\n\t\t\tlatestCfs = cfs[cfs.length - 1].value\n\t\t}\n\t\tif (feet) {\n\t\t\tlatestFeet = feet[feet.length - 1].value\n\t\t}\n\t\t  \n\t\titem.feet = latestFeet\n\t\t  item.cfs = latestCfs\n\t\t  \n        if (latestCfs && latestFeet) {\n          item.flow = latestCfs + \" cfs, \" + latestFeet + \" ft\"\n        }\n        else if (latestCfs) {\n          item.flow = cfs[cfs.length - 1].value + \" cfs\"\n        }\n        else if (latestFeet) {\n          item.flow = feet[feet.length - 1].value + \" ft\" \n        }\n\n        //item.create(true) will force regeneration of the button\n        //Replace the current button so that the flow info shows \n        let elem = document.getElementById(item.base + \"1\")\n        let expanded = item.expanded\n        console.log(expanded)\n        let replacement = item.create(true) //Update the version in cache\n        try {\n            elem.parentNode.replaceChild(replacement, elem)\n            //If the river was expanded before, keep it expanded\n            if (expanded) {\n                replacement.dispatchEvent(new Event(\"click\"))\n                //For some reason, the automatically opened buttons and the manually opened buttons behave different.\n                if (navigator.userAgent.toLowerCase().indexOf(\"google\") === -1) {\n                    replacement.dispatchEvent(new Event(\"click\"))\n                }\n            }\n        }\n        catch (e) {} //The list must have been sorted - the node was not currently in list\n      }\n    }\n    \n}\n","\n\nfunction drawColors(canvas, height) {\n\n    let context = canvas.getContext(\"2d\")\t\n\n    //Some browsers flip screen.width and screen.height on rotation - some don't\n\n    //window.innerWidth fails - the window is expanded to handle the width of the legend\n    //Then the legend doesn't resize (because the window has resized to it) \n\n    //This seems to be the only cross browser solution\n    canvas.width = document.documentElement.clientWidth\n    canvas.height = height\n\n    let gradient = context.createLinearGradient(0,0,canvas.width,canvas.height) //Not sure about parameters  \n\n    let redLightness = \"50%\"\n    let redColor = \"hsl(0,100%,\" + redLightness + \",60%)\"\n\n\n    gradient.addColorStop(0, redColor)\n    gradient.addColorStop(0.08, redColor)\n\n    let start = 0.08\n    let end = 0.92\n\n    let range = end-start\n    //240 is number of whole number hsl values\n\n    for (let i=0;i<=240;i++) {\n        gradient.addColorStop(start + (i/240*range), \"hsl(\" + i + \",100%,50%,30%)\")\t\n    }\n\n    gradient.addColorStop(0.92, \"hsla(240,100%,50%,60%)\")\n    gradient.addColorStop(1, \"hsla(240,100%,50%,60%)\")\n\n    context.fillStyle = gradient\n    context.fillRect(0,0,canvas.width,canvas.height)\t\n\n}\n\n\n\nfunction drawText(canvas, fontSize) {\n\n    let context = canvas.getContext(\"2d\")\t\n    context.fillStyle = window.darkMode ? \"white\" : \"black\"\n\n    //The fourth parameter is the maximum width of the text in pixels\n    //rivers.run may want to use it\n\n    let height = fontSize\n\n    context.font = fontSize + \"px Arial\"\n\n    context.textAlign = \"start\"\n    context.fillText(\"Too Low\", 0, height)\n\n    context.textAlign = \"center\"\n    context.fillText(\"Low Flow\", canvas.width*0.28, height)\n    context.fillText(\"Mid Flow\", canvas.width/2, height)\n    context.fillText(\"High Flow\", canvas.width*0.72, height)\n\n\n    //Black text on blue is near inivisible - so use white text on blue\n    if (!window.darkMode) {context.fillStyle = \"white\"} \n\n    context.textAlign = \"end\"\n    context.fillText(\"Too High\", canvas.width, height, canvas.width*0.2)\n\n}\n\n\nfunction makeSticky(canvas) {\n    //Make the legend stick to the top of the screen\n\n    //position: sticky failed in Safari\n    //canvas.style.position = \"-webkit-sticky\"\n    //canvas.style.position = \"sticky\"\n    //canvas.style.top = 0\n\n    let elementOffset = canvas.offsetTop\n    window.addEventListener(\"scroll\", function() {\n        let pageOffset = window.pageYOffset\n\n        if (pageOffset > elementOffset) {\n            canvas.style.position = \"fixed\"\n            canvas.style.top = 0\n            document.body.style.paddingTop = canvas.height + \"px\" //Avoid sudden jerk in page content\n        }\n        else {\n            canvas.style.position = \"\"\n            canvas.style.top = \"\"\n            document.body.style.paddingTop = 0\n        }\n    })\n}\n\n\n\nfunction updateLegend() {\n    let canvas = document.getElementById(\"legend\")\n\n    canvas.getContext(\"2d\").clearRect(0,0,canvas.width,canvas.height)\n\n    canvas.style.backgroundColor = window.getComputedStyle(document.body).getPropertyValue(\"background-color\")\n\n\n    let fontSize = parseFloat(window.getComputedStyle(document.getElementById(\"Rivers\").firstChild).getPropertyValue(\"font-size\"))\n\n    let height;\n    //Picked what I thought looked best\n    if (fontSize > 18) {\n        height = 20 + fontSize*2\n    }\n    else if (fontSize > 14.8){\n        fontSize *= 1.2\n        height = 10 + fontSize*2\n    }\n    else {\n        fontSize *= 1.4\n        height = 10 + fontSize*2\n    }\n\n    drawColors(canvas, height)\n    drawText(canvas, fontSize)\n    makeSticky(canvas)\n\n}\n\nwindow.addEventListener(\"resize\", updateLegend)\n//orientationchange should be fired on resize, but some browsers (such as Safari) do not\nwindow.addEventListener(\"orientationchange\", updateLegend)\n\nupdateLegend()"],"sourceRoot":""}