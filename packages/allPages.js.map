{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./allPages.js","webpack:///./collectVisitorInformation.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;AClFA;AACA;AACA;;AAEA;AACA,CAAC,mBAAO,CAAC,EAAgC;AACzC;AACA,UAAU;;;AAGV;AACA;AACA;AACA,KAAK;AACL;;;;AAIA;AACA;AACA,KAAK;AACL;AACA,qBAAqB,cAAc;AACnC,kDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,KAAK,GAAG,KAAK;AAClD;AACA,GAAG;AACH,KAAK;AACL;AACA;AACA;AACA;;;;AAIA;AACA;AACA,KAAK;AACL;AACA,qBAAqB,cAAc;AACnC,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yEAAyE;AACzE;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B;AAC5B,QAAQ,wB;;AAER;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;;AAIA;AACA;AACA,sCAAsC,gBAAgB;AACtD;AACA,yCAAyC,eAAe;AACxD;AACA,uCAAuC,cAAc;AACrD;AACA,wCAAwC,YAAY;;AAEpD;AACA;AACA;AACA;AACA,yCAAyC,GAAG,gBAAgB;AAC5D;AACA;AACA;AACA;AACA,yCAAyC,GAAG,oBAAoB;AAChE;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA,kCAAkC,0CAA0C;;;;;AAK5E;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA,aAAa,eAAe;AAC5B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,wCAAwC,0BAA0B;AAClE,uCAAuC,0BAA0B;;;;;;;;AAQjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;ACzXA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF","file":"allPages.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","//This JavaScript file should run on all pages\n//It defines global CSS rules, allows for forcing dark mode,\n//defines the river-overview DOM element, and makes sure a viewport meta tag exists.\n\ntry {\n\trequire(\"./collectVisitorInformation.js\") //Get site usage statistics\n}\ncatch(e) {console.error(e)}\n\n\nif ('serviceWorker' in navigator) {\n    window.addEventListener('load', function() {\n        navigator.serviceWorker.register('sw.js');\n    });\n}\n\n\n\n//Add the favicon if it does not exist.\ntry {\n    ;(function addFavicon() {\n        let tags = document.head.querySelectorAll(\"link\")\n        for (let i=0;i<tags.length;i++) {\n            if (tags[i].rel === \"shortcut icon\") {return} //There is already a favicon\n        }\n\t\tlet sizes = [16,24,32,64,96,160,196]\n\t\tsizes.forEach((size) => {\n\t\t\tlet favicon = document.createElement(\"link\")\n\t\t\tfavicon.rel = \"shortcut icon\"\n\t\t\tfavicon.type = \"image/png\"\n\t\t\tfavicon.href = `resources/icons/${size}x${size}-Water-Drop.png`\n\t\t\tdocument.head.appendChild(favicon)\n\t\t})\n    })()\n}\ncatch(e) {\n    console.error(e)\n}\n\n\n\n//Add the viewport meta tag if it does not exist.\ntry {\n    ;(function addViewportMeta() {\n        let tags = document.head.querySelectorAll(\"meta\")\n        for (let i=0;i<tags.length;i++) {\n            if (tags[i].name = \"viewport\") {return} //There is already a viewmport meta tag\n        }\n        let meta = document.createElement(\"meta\")\n        meta.name = \"viewport\"\n        meta.content = \"width=device-width, initial-scale=1\"\n        document.head.appendChild(meta)\n    })()\n}\ncatch(e) {\n    console.error(e)\n}\n\n\n//This is extremely sensitive to the design of the CSS\n//The @media query must be last rule in first stylesheet for this to work\nlet styleSheet = document.styleSheets[0]\n\nif (!styleSheet) {\n    console.warn(\"No stylesheet available. There must be an existing stylesheet in order for allPages.js to function properly without inline style allowed or without document.documentElement (which may always exist).\")\n    let style = document.createElement(\"style\")\n    document.documentElement.appendChild(style)\n    styleSheet = document.styleSheets[0]\n}\n\n\n//Determine if the user wants dark mode\n//If prefers-color-scheme does not exist, the user needs to manually select dark/light mode\n//If prefers-color-scheme does exist, we follow it, unless the user wants to override it\n\ntry {\n\t//Since we can't directly modify a CSSMediaRule, we will create a CSSMediaRule, then modify the media rule inside it.\n\t//This prevents us from having to remember where the media rule is in the list\n\t\n\tlet container = styleSheet.cssRules[styleSheet.insertRule(\"@media all {}\", styleSheet.cssRules.length)]\n\tlet mediaMatch = window.matchMedia('(prefers-color-scheme: dark)')\n\t\n\t\n\tfunction calculateDarkMode() {\n\t\tlet startingMode = window.darkMode\n\t\t\n        let darkMode = localStorage.getItem(\"prefersDarkMode\")\n\n        if (darkMode === null) {\n            darkMode = mediaMatch.matches\n        }\n\t\t\n\t        //Convert string to boolean\n\t\tif (darkMode === \"true\") {window.darkMode = true}\n\t\telse {window.darkMode = false}\t\n\t\t\n\t\tif (window.darkMode !== startingMode) {\n\t\t\twindow.dispatchEvent(new Event(\"colorSchemeChanged\"))\n\t\t}\n\t}\n\t\n\t\t//Detect changes in color scheme\n\t\tmediaMatch.onchange = calculateDarkMode\n\t\twindow.addEventListener(\"storage\", calculateDarkMode)\n\t\t\n        let mediaRule = styleSheet.cssRules[styleSheet.cssRules.length-2]\n\t\t\n\t\tmediaRule = container.cssRules[container.insertRule(mediaRule.cssText, container.cssRules.length)]\n\t\tstyleSheet.deleteRule(styleSheet.cssRules.length-2)\n\t\n\t\t\n\t\t\n        //Style links so that they are visible in dark mode\n        //Unvisited Link\n        mediaRule.insertRule(\"a:link {color: #3333FF;}\", mediaRule.cssRules.length)\n        //Visited link\n        mediaRule.insertRule(\"a:visited {color: purple;}\", mediaRule.cssRules.length)\n        //Hovering over link\n        mediaRule.insertRule(\"a:hover {color: green;}\", mediaRule.cssRules.length)\n        //Quick flash of color when link clicked\n        mediaRule.insertRule(\"a:active {color: red;}\", mediaRule.cssRules.length)\n\t\t\n\t\t//Enable or disable the media rule.\n\t\twindow.addEventListener(\"colorSchemeChanged\", function() {\n\t\t\tlet cssText = mediaRule.cssText\n\t\t\tif (window.darkMode === true) {\n\t\t\t\tcssText = cssText.replace(/@media [^{]+{/, \"@media all {\")\n\t\t\t\tcontainer.deleteRule(container.cssRules.length - 1)\n\t\t\t\tcontainer.insertRule(cssText, container.cssRules.length)\n\t\t\t}\n\t\t\telse if (window.darkMode === false) {\n\t\t\t\tcssText = cssText.replace(/@media [^{]+{/, \"@media not all {\")\n\t\t\t\tcontainer.deleteRule(container.cssRules.length - 1)\n\t\t\t\tcontainer.insertRule(cssText, container.cssRules.length)\n\t\t\t}\n\t\t})\n\t\t\n\t\tcalculateDarkMode()\n}\ncatch (e) {\n    console.error(e)\n}\n\n\n\n\n\n\n//Make sure I don't hate the font\nstyleSheet.insertRule(\"html body {font-family: Arial, Helvetica, sans-serif}\", styleSheet.cssRules.length)\n\n\n\n\n//Create navigation bar\n//Where rivers.run is located\n//This should allow rivers.run to the run from a directory\nlet root = window.location.href\nroot = root.slice(0,root.lastIndexOf(\"/\") + 1) //Add 1 so we don't clip trailing slash\n\nlet topnav = document.createElement(\"div\")\ntopnav.className = \"topnav\"\n\nlet items = []\n\nlet item1 = document.createElement(\"a\")\nitem1.href = root\nitem1.innerHTML = \"River Info\"\nitems.push(item1)\n\nlet item2 = document.createElement(\"a\")\nitem2.href = root + \"about.html\"\nitem2.innerHTML = \"About\"\nitems.push(item2)\n\nlet item3 = document.createElement(\"a\")\nitem3.href = root + \"FAQ.html\"\nitem3.innerHTML = \"FAQ\"\nitems.push(item3)\n\nlet item4 = document.createElement(\"a\")\nitem4.href = root + \"settings.html\"\nitem4.innerHTML = \"Settings\"\nitems.push(item4)\n\nlet item5 = document.createElement(\"a\")\nitem5.href = root + \"clubs.html\"\nitem5.innerHTML = \"Clubs\"\nitems.push(item5)\n\n\nlet currentPage = window.location.href.slice(root.length)\nif (currentPage.indexOf(\"#\") !== -1) {\n    currentPage = currentPage.slice(0, currentPage.indexOf(\"#\"))\n}\n\n\nfor (let i=0;i<items.length;i++) {\n    let item = items[i]\n\n    let target = item.href.slice(root.length)\n\n    if (target === currentPage) {\n        item.className = \"topnavcurrent\"\n    }\n    topnav.appendChild(item)\n}\n\ndocument.body.insertBefore(topnav, document.body.firstChild)\n\n\n\nstyleSheet.insertRule(`\n.topnav {\noverflow: hidden;\nbackground-color: #24b9cc;\nmargin:0px;\n}\n`, styleSheet.cssRules.length)\n\n\nstyleSheet.insertRule(`\n.topnav a {\nfloat: left;\ndisplay: block;\ncolor:black;\ntext-align:center;\npadding: 12px 13px;\ntext-decoration: none; /*Avoid the links being underlined*/\nfont-size: 17px;\n}\n`, styleSheet.cssRules.length)\n\n\n//Make sure the header doesn't go onto multiple lines\nstyleSheet.insertRule(`\n@media screen and (max-width: 386px) {\n.topnav a {\npadding: 10px 11px;\nfont-size: 4.3vw;\n}\n}\n`, styleSheet.cssRules.length)\n\n\nstyleSheet.insertRule(\".topnav a:hover {background-color: #359daa}\", styleSheet.cssRules.length)\nstyleSheet.insertRule(\".topnavcurrent {background-color: #25d1a7}\", styleSheet.cssRules.length)\n\n\n\n\n\n\n\n//The remaining code is for the river-overview tags\n\n//Add the modal styles\nstyleSheet.insertRule(`\n.modal {\ndisplay: none;\nposition:fixed;\nz-index:1;\npadding-top: 5%;\nleft:0;\ntop:0;\nwidth:100%;\nheight: 100%;\noverflow:auto;\nbackground-color: rgba(0,0,0,0.4);\n}`, styleSheet.cssRules.length)\n\nstyleSheet.insertRule(`\n.modal-content {\ncolor:black;\nbackground-color: #fefefe;\nmargin: auto;\npadding: 20px;\nborder: 1px solid #888;\nwidth: 90%;\n}`,styleSheet.cssRules.length)\n\nstyleSheet.insertRule(`\n.modal-close {\ncolor: #aaaaaa;\nfloat: right;\nfont-size: 28px;\nfont-weight: bold;\n}`,styleSheet.cssRules.length)\n\nstyleSheet.insertRule(`\n.modal-close:hover, .modal-close:focus {\ncolor: #000;\ntext-decoration: none;\ncursor: pointer;\n}`,styleSheet.cssRules.length)\n\n\nif (window.darkMode) {\n    styleSheet.insertRule(`\n.modal-content {\nbackground-color:black;\ncolor:#cfcfcf;\n}`, styleSheet.cssRules.length)\n}\n\n\n//Create the modal element\nlet overview_modal = document.createElement(\"div\")\noverview_modal.className = \"modal\"\n\nlet modal_content = document.createElement(\"div\")\nmodal_content.className = \"modal-content\"\n\nlet overview_modal_close = document.createElement(\"span\")\noverview_modal_close.className = \"modal-close\"\noverview_modal_close.innerHTML = \"×\"\n\nlet overview_modal_text = document.createElement(\"p\")\n\noverview_modal.appendChild(modal_content)\nmodal_content.appendChild(overview_modal_close)\nmodal_content.appendChild(overview_modal_text)\n\ndocument.body.appendChild(overview_modal)\n\n\n\n//Make the modal disappear when the close button is clicked, or when area outside content is clicked\noverview_modal_close.onclick = function() {\n    overview_modal.style.display = \"none\"\n}\n\nwindow.addEventListener(\"click\", function(event) {\n    if (event.target === overview_modal) {\n        overview_modal.style.display = \"none\"\n    }\n})\n\n\n//Create the river-overview element\nclass RiverOverview extends HTMLElement {\n    constructor() {\n        super();\n\n        function openOverview() {\n            let text = \"This overview (\" + this.innerHTML + \") is not available. This is likely due to a programming or data entry error\"\n            if (window.overviews && window.overviews[this.innerText.trim()]) {\n                text = window.overviews[this.innerText.trim()]\n            }\n\n            overview_modal_text.innerHTML = text\n            overview_modal.style.display = \"block\"\n\n        }\n\n\n        //Style so that text looks like a link/button\n        this.style.cursor = \"pointer\"\n        this.style.color = \"rgb(51, 51, 255)\"\n        this.style.textDecoration = \"underline\"\n\n        this.addEventListener(\"click\", openOverview)\n\n    }\n}\n\ntry {\n    customElements.define('river-overview', RiverOverview);\n}\ncatch (e) {\n    console.error(e)\n    //Alert firefox users about the flag\n    if (navigator.userAgent.includes(\"Firefox\")) {\n        setTimeout(function() {\n            alert(\"In order to view area overviews, you will need a browser that supports DOM customElements. You may be able to enable customElements in about:config\")\n        },4000)\n    }\n}\n","let previousVisits = (Number(localStorage.getItem(\"previousVisits\")) || 0)\nlocalStorage.setItem(\"previousVisits\", previousVisits + 1)\n\n\n//Data that we are collecting\nlet data = {\n  userAgent: navigator.userAgent, //Information about the browser\n\tselectedColorScheme: localStorage.getItem(\"prefersDarkMode\"), //Determining if you explicitly selected a color scheme\n\tusingDarkMode: window.darkMode, //Determining if you are using dark mode\n\tsupportsDarkMode: window.matchMedia('(prefers-color-scheme: dark)').media !== \"not all\", //Determine if your browser supports automatic dark mode\n\tonline: navigator.onLine, //Detect if the offline version of the site is being used\n\thasServiceWorkers: 'serviceWorker' in navigator,//Detect if the browser supports serviceworkers\n\ttimeStamp: Date.now(), //What time the page was visited at.\n\treferrer: document.referrer, //Used to detect how navigation is used\n\tpreviousVisits, //Used to detect if a visitor is unique\n\turl: window.location.href //Used to eliminate data sent due to development work\n}\n\n//URL to submit the data to\nlet formURL = \"https://docs.google.com/forms/d/e/1FAIpQLSfyTHeq0fp6-iofQacxfXcsSGjYymLJbLOPmlBBKBtttWvtcA/formResponse?ifq&entry.1198287313=\" + JSON.stringify(data) + \"&submit=Submit\"\nformURL = encodeURI(formURL)\n\nfunction loadURL() {\n\t//Return true if the request is successful. false otherwise\n\treturn new Promise((resolve, reject) => {\n\t\tif (window.fetch) {\n\t\t\tlet request = fetch(formURL, {mode: \"no-cors\"})\n\t\t\trequest.then((result) => {\n\t\t\t\tif (result.type === \"opaque\") {\n\t\t\t\t\tresolve(true)\n\t\t\t\t}\n        else {\n          resolve(false)\n        }\n\t\t\t})\n\t\t\trequest.catch((e) => {\n\t\t\t\tconsole.error(e)\n\t\t\t\tresolve(false)\n\t\t\t})\n\t\t}\n\t\telse {\n\n\t\t\t//For browsers that don't support fetch\n\t\t\t//I have no way to actually assure that the request went through using\n\t\t\t//XMLHttpRequest, and merely assume that it went through if anything happens\n\n      //Since browsers that support serviceWorker also support fetch, don't bother checking\n      //that the user is online or trying to bypass cache/serviceWorker\n\n\t\t\tlet request = new XMLHttpRequest()\n\t\t\t\trequest.onload = function(event) {\n\t\t\t\t\tresolve(true)\n\t\t\t\t};\n\t\t\t\trequest.onerror = function(event) {\n\t\t\t\t\tresolve(true)\n\t\t\t\t};\n\t\t\trequest.open(\"GET\", formURL);\n\t\t\trequest.send()\n\t\t}\n\t})\n}\n\n\n//Race conditions are possible, although unlikely to happen here (although not much breaks if they do)\n//If the site is loaded offline, store the data and send it in the next time the site is loaded.\nlet urls = JSON.parse(localStorage.getItem(\"urlsToLoad\") || \"[]\")\nurls.push(formURL)\nlocalStorage.setItem(\"urlsToLoad\", JSON.stringify(urls))\n\nfor (let i=0;i<urls.length;i++) {\n\tlet url = urls[i]\n\tloadURL(url).then((result) => {\n\t\t//If the request succeeded, remove the URL from the queue\n\t\tif (result === true) {\n\t\t\turls.splice(urls.indexOf(url), 1)\n\t\t\tlocalStorage.setItem(\"urlsToLoad\", JSON.stringify(urls))\n\t\t}\n\t})\n}\n"],"sourceRoot":""}