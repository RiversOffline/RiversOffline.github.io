{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./index.js","webpack:///./graph.js","webpack:///./TopBar.js","webpack:///./River.js","webpack:///./sort.js","webpack:///./loadUSGS.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;AClFa;;AAEb;AACA;AACA;;AAEA;;AAEA,eAAe,mBAAO,CAAC,CAAY;;AAEnC;AACA,oBAAoB,mBAAO,CAAC,CAAa;;AAEzC,aAAa,mBAAO,CAAC,CAAY;;AAEjC;AACA,oBAAoB,mBAAO,CAAC,CAAW;;;;;;;AAOvC;AACA;AACA;;;;AAIA;AACA;AACA;AACA,GAAG;AACH;;;;AAIA;AACA;AACA;AACA;AACA,CAAC;;;AAGD,c;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C;AAC1C;;AAEA;AACA;AACA;AACA;AACA,S;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,S;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;;;AAIA;;;;;AAKA,8B;AACA,K;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;;;AAGA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;;AAGA;AACA;;;AAGA,2DAA2D,sBAAsB,4CAA4C,MAAM;;;;;;AAMnI;AACA;AACA,mBAAO,CAAC,CAAe;;;;;;;;;;AAUvB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7KA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kC;;;;AAIA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2B;AACA;AACA;AACA;AACA,C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,KAAK;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,sB;AACA;;AAEA,yB;AACA;;AAEA,wB;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA,2B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2E;AACA;AACA;AACA,wB;AACA;AACA,wB;AACA,C;AACA;AACA;AACA,yE;AACA;AACA;AACA;AACA,yE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA,mG;AACA,mG;AACA;AACA;AACA,2E;AACA;AACA;AACA,sE;AACA;AACA;AACA,oE;AACA,C;AACA;;AAEA;AACA;AACA;AACA,2B;AACA;AACA;AACA;AACA;;AAEA;AACA,yB;AACA,wD;AACA,wB;;;;;AAKA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA,eAAe,+CAA+C;AAC9D;AACA;AACA;AACA,C;AACA;;;AAGA;;AAEA,eAAe,+CAA+C;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,eAAe,KAAK;AACpB;AACA;AACA;AACA;AACA,C;;;;;;;ACjTA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,C;;;;;;;ACvHA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,+BAA+B,aAAa;AAC5C;AACA;AACA;AACA;;AAEA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,e;AACA;AACA,SAAS,SAAS;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,S;AACA;;;;AAIA;AACA;AACA;AACA,kCAAkC,yCAAyC;AAC3E;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA,K;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,G;AACA;;;;;;;;ACnQA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;AACA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;AACA,C;;;;;;AC9FA;;AAEA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,KAAK;;AAEL;AACA,iBAAiB,oBAAoB;AACrC;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB;AAClB,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA,C","file":"package.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","'use strict';\n\n//This code has 2 dependencies:\n//graph.js\n//riverarray.js\n\n//It may work without graph.js, but will log lots of errors to console\n\nself.addLine = require(\"./graph.js\").addLine\n\n//Defines self.TopBar and self.triangle\nObject.assign(self, require(\"./TopBar.js\"))\n\nself.River = require(\"./River.js\").River\n\n//Defines self.alphabeticalsort and self.ratingsort\nObject.assign(self, require(\"./sort.js\"))\n\n\n\n\n\n\nself.GetId = function(Name) {\n  return document.getElementById(Name)\n}\n\n\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker.register('/sw.js');\n  });\n}\n\n    \n    \n//ItemHolder is a list of all the DOM elements objects. New objects should be pushed into the list. \nself.ItemHolder = []\nriverarray.map(function(event, index) {\n    ItemHolder[index] = new River(index, event)\n})\n    \n    \nvar oldresult;    \nfunction NewList(query, type, reverse) {\n    if (typeof(query) === \"string\") {\n    query = query.toLowerCase()\n    }\n    //Location searching uses numbers.\n    \n    let orderedlist = ItemHolder.slice(0); //Clone the array\n    if (!(String(query).length === 0 || !query || !type)) {\n    \n    if (type === \"sort\") {\n        //Obey other filters\n        if (oldresult) {\n            orderedlist = oldresult\n        }   \n        if (query === \"alphabetical\") {\n          orderedlist = alphabeticalsort(orderedlist, reverse)\n        }\n        else if (query === \"rating\") {\n          orderedlist = ratingsort(orderedlist, reverse)\n        }\n        else if (query === \"skill\") {\n          orderedlist = skillsort(orderedlist, reverse)\n        }      \n    }\n        \n        \n    if (type === \"normal\") {\n        let l = [[],[],[],[],[]]\n        orderedlist.forEach(function(event){\n            if(event.tags.toLowerCase().indexOf(query) !== -1) {\n                if (event.name.toLowerCase().indexOf(query) !== -1) {\n                    l[0].push(event)\n                }\n                else {\n                    l[1].push(event)\n                }\n            }\n            else if (event.name.toLowerCase().indexOf(query) !== -1) {\n                l[2].push(event)\n            }\n            else if (event.section.toLowerCase().indexOf(query) !== -1) {\n                l[3].push(event)\n            }\n            else if (event.writeup.toLowerCase().indexOf(query) !== -1) {\n                l[4].push(event)\n            }\n        })\n        \n        orderedlist = l[0].concat(l[1],l[2],l[3])\n        \n        //Add the less relevant results below\n        orderedlist = orderedlist.concat(l[4])\n        \n        \n        \n    }\n        \n        \n        \n        \n    if (type === \"advanced\") {  \n    }    \n        \n    if (type === \"location\") {\n    if (oldresult) {\n        orderedlist = oldresult\n    }\n    \n    var nlist = []\n    orderedlist.forEach(function(value){\n        if (value.plat && value.plon) {\n             if (distanceto(value.plat, value.plon) < query) {\n                 nlist.push(value)\n             }\n        }\n    })\n    orderedlist = nlist\n\n    \n    }\n        \n        \n    }//Closing for if a query is present\n    \n    //Clear Current\n    ItemHolder.forEach(function(event) {\n        event.delete()\n    }) \n    //Append New\n    var div = GetId(\"Rivers\")\n    //Everything else    \n    orderedlist.forEach(function(event){\n        div.appendChild(event.create())\n    })\n     \n    if (type !== \"sort\") {\n        oldresult = orderedlist\n    }\n}\n    \n\nGetId(\"Rivers\").appendChild(new TopBar().create())\nNewList(\"alphabetical\", \"sort\")\n\n   \nGetId(\"searchbox\").addEventListener(\"keydown\", function() {setTimeout(function(){NewList(GetId(\"searchbox\").value, \"normal\")}, 20)})\n\n    \n\n\n\n//Fetch data from USGS\n//Put this at the bottom to make sure ItemHolder is filled\nrequire(\"./loadUSGS.js\").loadUSGS()\n\n\n\n\n\n\n\n\n\n//Check if there is a search query\nif (window.location.hash.length > 0) {\n    let search = window.location.hash.slice(1)\n    GetId(\"searchbox\").value = search\n    NewList(search, \"normal\")\n}\n\n\n","//Graph Code\n//It's Ugly... It should be fixed\n//BUT IT WORKS\n\n//addline(canvas, horizontal, vertical, color, graphtype, numplace)\n    \n//canvas - HTML canvas element\n//horizontal - array of horizontal values. Pass 0 and it will evenly space.\n//vertical - array of vertical values\n    \n//color - Optional. Color of line. Default black\n//graphtype - Optional. Specify 2 to put 2 lines and 2 scales on one graph. See numplace below\n    //numplace - Use only if you are using graphtype = 2. \n        //If you specify 0 or do not pass a value, the line's scale will be on the left side of the graph.\n        //If you specify 1, the line's scale will be on the right side of the graph.\n    \nmodule.exports.addLine = function (GraphName, timeframe, Source, canvas, horizontal, vertical, color, graphtype, numplace) {\nif (graphtype === 3) {\n    var endcolor = numplace\n}\nif (graphtype !== 2) {\n    numplace = 0\n}\nvar height = canvas.height*0.80\nvar width = canvas.width\n\nvar ctx = canvas.getContext('2d');  \n    \n    \n    \nif (!isNaN(Number(horizontal))) {\n    horizontal = []\n    for (var i = 0;i<vertical.length;i++) {\n        horizontal.push(i*width)\n    }\n}\nif (horizontal.length !== vertical.length) {\n    console.warn(\"Uneven amount of datapoints. \" + horizontal.length + \" horizontal points found, but \" + vertical.length + \" vertical points found.\")\n}\n\nif (color === undefined) {\n    color = \"#000000\"\n}\nctx.strokeStyle = color\nctx.lineWidth = Math.ceil(Math.min(width, height)/120)\nctx.beginPath();\n\nif (graphtype === 2) {\nwidth = width*0.86\n}\nelse {\nwidth = width*0.93\n}\n\nvar calcvertical = []\nfor (var i = 0;i<vertical.length;i++) {\nif (!isNaN(Number(vertical[i])) && (vertical[i]) !== \"\") {\n    calcvertical.push(vertical[i])\n}\n//else {\n    //This is a valid warning - It just got TOO ANNOYING\n    //console.warn(\"Element \" + i + \" in list is an invalid number. It had a value of: \" + vertical[i])\n//}\n}\n    \nvar vscale = Math.max(...calcvertical) - Math.min(...calcvertical)\nvar hscale = Math.max(...horizontal) - Math.min(...horizontal)\nvscale = height/vscale\nhscale = width/hscale\nvar voffset = Math.min(...calcvertical)\nvar hoffset = Math.min(...horizontal)\n\nhoffset -= (Math.max(...horizontal) - Math.min(...horizontal))*0.07\n\nvar px = Math.floor(((canvas.width)*0.07)/2.6)\nctx.font = (px + 'px serif')\nif (color.length === 9) {\n    color = color.slice(0,7)\n}\nctx.fillStyle = color\nif (graphtype === 3) {\nvar grd = ctx.createLinearGradient(0, 0, 0, height);\ngrd.addColorStop(0, color);   \ngrd.addColorStop(1, endcolor);\nctx.strokeStyle = grd;\nctx.fillStyle = grd;\n}    \n\nif (numplace === 0 || numplace === undefined) {\n    var start = 1\n}\nelse {\n    var start = canvas.width-(canvas.width*0.07)\n}\nfor(var i = 1;i<11;i++) {\n    var Text = ((Math.max(...calcvertical) - Math.min(...calcvertical))*((i-1)/10))+Math.min(...calcvertical)\n    \n    if (Text >= 1000) {\n        Text = Math.round(Text)\n    }\n    else {\n    Text = Text.toFixed(3-String(Math.round(Text)).length)\n    if (Number(Text) === Math.round(Text)) {\n    Text = Math.round(Text)\n    }\n    }\n    \n    ctx.fillText(Text, start, (height*(11-i))/10-5);\n}\n  \n//Top one\nText = ((Math.max(...calcvertical) - Math.min(...calcvertical))*((i-1)/10))+Math.min(...calcvertical)\nif (Text >= 1000) {\nText = Math.round(Text)\n}\nelse {\nText = Text.toFixed(3-String(Math.round(Text)).length)\nif (Number(Text) === Math.round(Text)) {\nText = Math.round(Text)\n}\n}\nctx.fillText(Text, start, 27);\n   \n\n    \n    \n    \nvar px = Math.floor(((canvas.width)*0.07)/2.8)\nctx.font = (px + 'px serif')\nif (color.length === 9) {\n    color = color.slice(0,7)\n}\nctx.fillStyle = \"black\"\n    \n    \n    \n    \nvar time1 = new Date(timeframe[0])\nvar time2 = new Date(timeframe[timeframe.length - 1])\nvar time3 = new Date(((time2-time1)/2)+time1.getTime())\nvar starttime = time1.getHours()\nvar endtime = time2.getHours()\nvar midtime = time3.getHours()\nif (String(time1.getHours()).length < 2) {\n    starttime = starttime + \"0\"\n}\nstarttime += \":\" + time1.getMinutes()\nif (String(time1.getMinutes()).length < 2) {\n    starttime = starttime + \"0\"\n}\nstarttime += \" \" + (time1.getMonth()+1) + \"/\" + time1.getDate() + \"/\" +time1.getFullYear()\n\n    \nif (String(time2.getHours()).length < 2) {\n    endtime = endtime + \"0\"\n}\nendtime += \":\" + time2.getMinutes()\nif (String(time2.getMinutes()).length < 2) {\n    endtime = endtime + \"0\"\n}\nendtime += \" \" + (time2.getMonth()+1) + \"/\" + time2.getDate() + \"/\" +time2.getFullYear()\n\n    \nif (String(time3.getHours()).length < 2) {\n    midtime = midtime + \"0\"\n}\nmidtime += \":\" + time3.getMinutes()\nif (String(time3.getMinutes()).length < 2) {\n    midtime = midtime + \"0\"\n}\nmidtime += \" \" + (time3.getMonth()+1) + \"/\" + time3.getDate() + \"/\" +time3.getFullYear()\n    \nctx.fillText(starttime, 10, (canvas.height*(11/12))-(canvas.height*0.06)-12)\n\nctx.textAlign = \"end\"; \nctx.fillText(endtime, canvas.width-10, (canvas.height*(11/12))-(canvas.height*0.06)-12)\n  \nctx.textAlign = \"center\"; \nctx.fillText(midtime, canvas.width/2, (canvas.height*(11/12))-(canvas.height*0.06)-12)\n\nctx.textAlign = \"start\";     \n    \n    \n    \nvar px = Math.floor(((canvas.width)*0.07)/2.4)\nctx.font = (px + 'px serif')\nctx.fillStyle = color\n//because a bit of text is smaller than the whole graph\nif (graphtype === 3) {\nvar grd = ctx.createLinearGradient(0, height, 200, height);\ngrd.addColorStop(0, color);   \ngrd.addColorStop(1, endcolor);\nctx.strokeStyle = grd;\nctx.fillStyle = grd;\n}\n\nif (graphtype === 2) {\nif (numplace === 0 || numplace === undefined) {\nctx.fillText(\"Flow (Cubic Feet/Second)\", start+5, (canvas.height*(11/12)));    \n}\nelse {\nctx.textAlign = \"right\"; \nctx.fillText(\"Gauge Height (Feet)\", start-5, (canvas.height*(11/12)));\nctx.textAlign = \"start\"; \n} \n}\nelse if (graphtype === 3) {\nctx.fillText(\"Water Temperature (°F)\", start+5, (canvas.height*(11/12)));    \n}\nelse {\nif (GraphName === \"Precipitation\") {\nctx.fillText(\"Precipitation (Inches)\", start+5, (canvas.height*(11/12))); \nvar fulldayprecip = 0\nvar halfdayprecip = 0\nvar preciplist = vertical.slice(-96)\nvar preciplist = preciplist.map(Number)\n//convert strings to numbers\npreciplist.forEach(function(value){\n    fulldayprecip += value\n})\npreciplist = preciplist.slice(-48)\npreciplist.forEach(function(value){\n    halfdayprecip += value\n})\n    \nfulldayprecip = fulldayprecip.toFixed(2)\nhalfdayprecip = halfdayprecip.toFixed(2)\n    \nctx.fillText(\"Last 24 Hours: \" + fulldayprecip + \" in\", canvas.width-700, (canvas.height*(11/12))); \nctx.fillText(\"Last 12 Hours: \" + halfdayprecip + \" in\", canvas.width-330, (canvas.height*(11/12))); \n}\nelse if (GraphName === \"cfs\") {\nctx.fillText(\"Flow (Cubic Feet/Second)\", start+5, (canvas.height*(11/12)));    \n}\nelse if (GraphName === \"height\") {\nctx.fillText(\"Gauge Height (Feet)\", start+5, (canvas.height*(11/12)));    \n}\nelse {\nctx.fillText(\"Labeling Error...\", start+5, (canvas.height*(11/12)));    \n}    \n}\n\n//set it back    \nif (graphtype === 3) {\nvar grd = ctx.createLinearGradient(0, 0, 0, canvas.height);\ngrd.addColorStop(0, color);   \ngrd.addColorStop(1, endcolor);\nctx.strokeStyle = grd;\nctx.fillStyle = grd;\n}\n \nctx.fillStyle = \"black\"\nctx.textAlign = \"center\"; \nctx.fillText(Source, canvas.width/2 , canvas.height-10);  \nctx.textAlign = \"start\"; \n    \n\n    \n    \nfunction H(Value) {\n    return Math.round((Value-hoffset)*hscale)\n}\n\nfunction V(Value) {\n    return Math.round(height-((Value-voffset)*vscale))\n}\n\n\nfor (var p = 0;p<Math.min(vertical.length, horizontal.length);p++) {\nif (!isNaN(Number(vertical[p])) && vertical[p] !== \"\") {\nctx.moveTo(H(horizontal[p]), V(vertical[p]))\nbreak;\n}    \n}\n    \n\nvar valid = 1\n \nfor (var i = p;i<Math.min(vertical.length, horizontal.length);i++) {\n    if (!isNaN(Number(vertical[i])) && vertical[i] !== \"\") {\n    if (valid === 1) {\n    ctx.lineTo(H(horizontal[i]), V(vertical[i]))\n    }\n    else {\n    ctx.moveTo(H(horizontal[i]), V(vertical[i])+10)\n    ctx.lineTo(H(horizontal[i]), V(vertical[i]))\n    valid = 1\n    }\n    }\n    else {\n    valid = 0\n    }\n}\n  \n    \nctx.stroke();\nctx.beginPath()\n    \nctx.lineWidth = Math.ceil(ctx.lineWidth/10)\nctx.strokeStyle = \"#000000AA\"\nfor (var i = 1;i<11;i++) {\n    ctx.moveTo(0, height*(11-i)/10)\n    ctx.lineTo(canvas.width, height*(11-i)/10)\n}\nctx.stroke()\n}    \n","//Auxillary Function        \n//True means pointing up, false means pointing down\nfunction triangle(facing) {\n  //Most values in this function are arbitrary\n  let scale = window.innerWidth/750\n  scale = scale ** 0.5 //Square Root to make difference smaller\n  \n  let div = document.createElement(\"div\")\n  div.style.width = 0;\n  div.style.height = 0;\n  div.style.display = \"inline-block\";\n  div.style.borderLeft = 4*scale + \"px solid transparent\"\n  div.style.borderRight = 4*scale + \"px solid transparent\"\n  div.style.marginLeft = 1.5*scale + \"px\"\n  //If triangle is pointing up\n  if (facing) {\n    div.style.borderBottom = 8*scale + \"px solid black\"\n  }\n  else {\n    div.style.borderTop = 8*scale + \"px solid black\"\n  }\n  return div;\n}\n\nfunction TopBar() {\n    this.create = function() {\n        let button = document.createElement(\"button\")\n        button.id = \"topbar\"\n        button.className = \"riverbutton\"\n      \n        //Auxillary Function\n        function NewSpan(Text) {\n          let span = document.createElement(\"span\")\n          span.className = \"riverspan\"\n          span.innerHTML = Text\n          return span\n        }\n        \n        //Auxillary Function\n        //Elem is the span element. If facing is true, set triangle to up, else down\n        function settri(elem, facing) {\n          elem.lastChild.remove()\n          elem.appendChild(triangle(facing))\n        }\n      \n      \n        let span = NewSpan(\"River\")\n        span.appendChild(triangle(true))\n\n        span.onclick = function() {\n          if (this.value) {\n            settri(this, false)\n            NewList(\"alphabetical\", \"sort\", true)\n            this.value = 0\n          }\n          else {\n            settri(this, true)\n            NewList(\"alphabetical\", \"sort\")\n            this.value = 1\n          }\n        }\n        span.value = 1//Starts sorted alphabetically, a-z. The first sort needs to flip that.\n        button.appendChild(span)\n        \n        \n        button.appendChild(NewSpan(\"Section\"))\n\n        \n        span = NewSpan(\"Skill\")\n        span.appendChild(triangle(true))\n        span.onclick = function() {\n            if (this.value === 1) {\n                NewList(\"skill\", \"sort\", true)\n                settri(this, false)\n                this.value = 0\n            }\n            else {\n                NewList(\"skill\", \"sort\")\n                settri(this, true)\n                this.value = 1\n            }\n        }\n        span.value = 0\n        button.appendChild(span) \n        \n        span = NewSpan(\"Rating\")\n        span.appendChild(triangle(true))\n\n        span.onclick = function() {\n                if (this.value === 1) {\n                    NewList(\"rating\", \"sort\", true)\n                    settri(this, true)\n                    this.value = 0\n                }\n                else {\n                    NewList(\"rating\", \"sort\")\n                    settri(this, false)\n                    this.value = 1\n                }\n        }\n        span.value = 0\n        button.appendChild(span) \n        \n        button.appendChild(NewSpan(\"Flow Info\"))\n\n        return button\n    }\n    \n    this.delete = function() {\n        let Node = GetId(\"topbar\")\n        if (Node) {\n            Node.parentNode.removeChild(Node)\n        }\n    }\n}\n\n\nmodule.exports = {\n    triangle,\n    TopBar\n}","    \nmodule.exports.River = function(locate, event) {\n  this.name = event.name\n  this.section = event.section\n  this.skill = event.skill\n    \n  switch (Number(event.rating)) {\n    case 1:\n        this.rating = \"1Star\";\n        break;\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n        this.rating = event.rating + \"Stars\";\n        break;\n    default:\n        this.rating = \"Error\"\n  }\n  if (!this.rating) {\n      this.rating = \"Error\"\n  }\n\n  this.writeup = event.writeup\n  this.tags = event.tags || \"\"\n  this.usgs = event.usgs\n  this.plat = event.plat\n  this.plon = event.plon\n  this.tlat = event.tlat\n  this.tlon = event.tlon\n  this.aw = event.aw\n  this.base = \"b\" + locate\n  this.expanded = 0\n  this.index = locate\n    \n    \n  this.create = function (forceregenerate) {\n    //Only create the button once - It's about 3 times faster.\n    if (!this.finished || forceregenerate) {\n    var button = document.createElement(\"button\")\n    button.id = this.base + 1\n      \n    function AddSpan(text) {\n    let span = document.createElement(\"span\")\n    span.innerHTML = text\n    span.className = \"riverspan\"\n    button.appendChild(span)\n    }\n            \n    AddSpan(this.name)\n    AddSpan(this.section)\n    AddSpan(this.skill)\n      \n    //Star images for rating\n    if (this.rating === \"Error\") {\n        AddSpan(\"???\") \n    }\n    else {\n    let img = document.createElement(\"img\")\n    img.src = \"https://rivers.run/resources/\" + this.rating + \".png\"\n    img.alt = this.rating[0] + \" Stars\"\n    img.className = \"starimg\"\n    let span = document.createElement(\"span\")\n    span.appendChild(img)\n    span.className = \"riverspan\"\n    button.appendChild(span)\n    }\n      \n      \n      \n    if (this.flow) {\n      AddSpan(this.flow)\n    }\n    button.className = \"riverbutton\"\n      \n    \n    button.onclick = function () {\n        let river = ItemHolder[locate]\n        if (river.expanded === 0) {\n        river.expanded = 1\n        var div = document.createElement(\"div\")\n        div.innerHTML = river.writeup + \"<br>\"\n                  \n        if (river.plat && river.plon) {\n            div.innerHTML += \"<br>Put-In GPS Coordinates: \" + river.plat + \", \" + river.plon\n        }\n        \n        if (river.tlat && river.tlon) {\n            div.innerHTML += \"<br>Take-Out GPS Coordinates: \" + river.tlat + \", \" + river.tlon\n        }\n            \n        if (river.aw) {\n            div.innerHTML += \"<br><br><a href='https://www.americanwhitewater.org/content/River/detail/id/\" + river.aw + \"'>Click here to view this river on American Whitewater</a>\"\n        }\n\n        //Graph\n        let data;\n        if (self.usgsarray) {\n          data = self.usgsarray[river.usgs] \n        }\n        \n        //Put the whole canvas code in a try statement\n        //If not, USGS gauge errors will prevent river from opening when clicked\n            \n        //TODO: Wrap each canvas individually. That was, one canvas with invalid data does not stop the rest    \n        try {\n          if (data) {\n              div.innerHTML += \"<br><br>\" //Space the first canvas\n\n              let temp = data[\"00010\"]\n              let precip = data[\"00045\"]\n              let cfs = data[\"00060\"]\n              let height = data[\"00065\"]\n\n\n              //Auxillary Function\n              function toparts(arr) {\n                  let values = []\n                  let timestamps = []\n\n                  for (let i=0;i<arr.length;i++) {\n                      let obj = arr[i]\n                      values.push(obj.value)\n                      timestamps.push(obj.dateTime)\n                  }\n\n                  return {values:values,timestamps:timestamps}\n              }\n\n              //Auxillary Function\n              function createcanvas() {\n                  let canvas = document.createElement(\"canvas\")\n                  canvas.width = 1200\n                  canvas.height = 800 \n\n                  //Set background to white\n                  let ctx = canvas.getContext(\"2d\");\n                  ctx.fillStyle = \"white\";\n                  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n                return canvas\n              }\n\n              if (cfs||height) {\n                  let canvas1 = createcanvas()\n\n                  if (cfs && height) {\n                      let parts = toparts(cfs.values)\n                      addLine(\"cfs\", parts.timestamps, data.name, canvas1, 0, parts.values, \"#00AAFF80\", 2)\n                      parts = toparts(height.values)\n                      addLine(\"height\", parts.timestamps, data.name, canvas1, 0, parts.values, \"#0000FF80\", 2, 1)                \n                  }\n                  else if (cfs) {\n                      let parts = toparts(cfs.values)\n                      addLine(\"cfs\", parts.timestamps, data.name, canvas1, 0, parts.values, \"#00AAFF80\")\n                  }\n                  else {\n                      let parts = toparts(height.values)\n                      addLine(\"height\", parts.timestamps, data.name, canvas1, 0, parts.values, \"#0000FF80\")    \n                  }\n\n                  //For some reason, only the last canvas was showing. Use images\n                  //Images also allow \"Save Image As\"\n                  let img = document.createElement(\"img\")\n                  img.className = \"graph\"\n                  img.src = canvas1.toDataURL(\"image/png\")\n\n                  div.appendChild(img)\n              }\n\n              if (temp) {\n                  let canvas2 = createcanvas()\n\n                  let parts = toparts(temp.values)\n                  addLine(\"\", parts.timestamps, data.name, canvas2, 0, parts.values, \"#FF0000\", 3, \"#0000FF\")\n\n                  //For some reason, only the last canvas was showing. Use images\n                  //Images also allow \"Save Image As\"\n                  let img = document.createElement(\"img\")\n                  img.className = \"graph\"\n                  img.src = canvas2.toDataURL(\"image/png\")\n                  div.appendChild(img)\n              }\n\n              if (precip) {\n                  let canvas3 = createcanvas() \n\n                  let parts = toparts(precip.values)\n                  addLine(\"Precipitation\", parts.timestamps, data.name, canvas3, 0, parts.values, \"#0066FF80\")\n\n                  //For some reason, only the last canvas was showing. Use images\n                  //Images also allow \"Save Image As\"\n                  let img = document.createElement(\"img\")\n                  img.className = \"graph\"\n                  img.src = canvas3.toDataURL(\"image/png\")\n                  div.appendChild(img)\n              } \n          }\n        }catch(e){console.warn(\"Graphing Error: \" + e)}\n        //End of Graph\n            \n        div.style.padding = \"6px\"\n        div.id = river.base + 2\n        button.style.backgroundColor = \"#e3e3e3\"\n        button.parentNode.insertBefore(div, button.nextSibling)\n        }\n        else {\n        river.expanded = 0\n        button.style.backgroundColor = \"\"\n        var elem = GetId(river.base + 2)\n        if (elem) {\n        elem.parentNode.removeChild(elem)\n        }\n            \n        }        \n    }\n        \n    \n    \n    //Make content available to Googlebot for indexing\n    if (navigator.userAgent.toLowerCase().indexOf(\"google\") !== -1) {\n        try {\n            setTimeout(function(){button.dispatchEvent(new Event(\"click\"))}, 100)\n        }\n        catch(e) {}\n    }\n    //The code directly above this is used to allow Googlebot to index content. \n    //Shall it result in an SEO hit, or shall Googlebot be improved to handle content inside of JavaScript,\n    //It can safely be removed.    \n    \n    \n    //Store button for reuse later   \n    this.finished = button\n        \n    }    \n    \n    //Return finished button\n    return this.finished\n      \n  }\n  this.delete = function () {\n    let river = ItemHolder[locate]\n    function Remove(Code) {\n        let ToDelete = GetId(river.base + Code)\n        if (ToDelete) {\n            ToDelete.parentNode.removeChild(ToDelete)\n        }\n    }\n      \n    //Reset background color\n    let reset = GetId(river.base + 1)\n    if (reset) {\n        reset.style.backgroundColor = \"\"\n    }\n      \n    Remove(2)\n    Remove(1)   \n      \n  } \n}\n    \n","function alphabeticalsort(orderedlist, reverse) {\n  \n    function compare(a,b) {\n    if (a.name < b.name)\n        return -1;\n    if (a.name > b.name)\n        return 1;\n    return 0;\n    }\n  \n    orderedlist.sort(compare);\n    if (reverse) {\n        orderedlist.reverse()\n    }\n  \n    return orderedlist\n}\n\nfunction ratingsort(orderedlist, reverse) {\n    function compare(a,b) {\n    if (a.rating > b.rating)\n        return -1;\n    if (a.rating < b.rating)\n        return 1;\n    return 0;\n    }\n    orderedlist.sort(compare);\n    if (reverse) {\n         orderedlist.reverse()\n    }\n    //Move error values to end\n    while (orderedlist[0].rating === \"Error\") {\n        orderedlist.push(orderedlist.shift())\n    }  \n    return orderedlist\n  \n}\n\n\nfunction skillsort(orderedlist) {\n        orderedlist.sort(function(a,b) {\n    \n    function ToNum(value) {\n        \n        switch (value.skill) {\n            case \"FW\":\n                value = 1;\n                break;\n            case \"B\":\n                value = 2;\n                break;\n            case \"N\":\n                value = 3;\n                break;\n            case \"LI\":\n                value = 4;\n                break;\n            case \"I\":\n                value = 5;\n                break;\n            case \"HI\":\n                value = 6;\n                break;\n            case \"A\":\n                value = 7;\n                break;\n            case \"E\":\n                value = 8;\n                break;\n            default:\n                value = 9;\n        }\n        return value\n    }       \n        return ToNum(a)-ToNum(b)\n    })\n    \n    \n    if (reverse) {\n        orderedlist.reverse()\n        while (orderedlist[0].skill === \"?\") {\n            orderedlist.push(orderedlist.shift())\n        }\n    }\n    \n    return orderedlist\n}\n\n\n\nmodule.exports = {\n    ratingsort,\n    alphabeticalsort,\n    skillsort,\n}","module.exports.loadUSGS = async function() {\n    \n    var sites = []\n    for (let i=0;i<riverarray.length;i++) {\n        let val = riverarray[i].usgs\n        //Check for accuracy\n        if (val && val.length > 7 && val.length < 16) {\n            sites.push(val)\n        }\n    }\n    let url = \"https://waterservices.usgs.gov/nwis/iv/?format=json&sites=\" + sites.join(\",\") +  \"&startDT=\" + new Date(Date.now()-1000*86400).toISOString()  + \"&parameterCd=00060,00065,00010,00045&siteStatus=all\"\n\n    let response = await fetch(url)\n    let usgsdata = await response.json()    \n\n    self.usgsarray = {}\n    //Iterate through all known conditions\n    usgsdata.value.timeSeries.forEach(function(event){\n        let obj2 = {}\n        obj2.values = event.values[0].value //The values - ex. Gauge Height Array\n      \n        if (obj2.values.length === 0) {\n          console.log(\"Empty Array. Skipping\")\n          return;\n        }\n      \n        obj2.units = event.variable.variableDescription //Units of values\n        \n        let sitecode = event.sourceInfo.siteCode[0].value\n        //See if the site is already in the array.\n        //If the site code is not in the array, add it. \n        if (!usgsarray[sitecode]) {\n            let obj3 = {}\n            obj3.name = event.sourceInfo.siteName\n            usgsarray[sitecode] = obj3\n        }\n      \n        let variablecode = event.variable.variableCode[0].value\n\n        //Convert celcius to farenheight\n        if (variablecode === \"00010\" && obj2.units === \"Temperature, water, degrees Celsius\") {\n          for (let i=0;i<obj2.values.length;i++) {\n            obj2.values[i].value = obj2.values[i].value * 1.8 + 32\n          }\n          \n          obj2.units = \"Temperature, water, degrees Fahrenheit\"\n        }\n      \n         \n        //Add the values onto the site code object\n        usgsarray[sitecode][variablecode] = obj2\n    })\n  \n    //Add USGS Data to Graph\n    for (let i=0;i<ItemHolder.length;i++) {\n      let item = ItemHolder[i]\n      let data = usgsarray[item.usgs]\n      \n      if (data) {\n        let cfs = data[\"00060\"]\n        let feet = data[\"00065\"]\n        \n        //Prevent \"TypeError: Can't Read Property 'values' of undefined\"\n        if (cfs) {cfs = cfs.values}\n        if (feet) {feet = feet.values}\n\n        if (cfs && feet) {\n          item.flow = cfs[cfs.length - 1].value + \" cfs, \" + feet[feet.length - 1].value + \" ft\"\n        }\n        else if (cfs) {\n          item.flow = cfs[cfs.length - 1].value + \" cfs\"\n        }\n        else if (feet) {\n          item.flow = feet[feet.length - 1].value + \" ft\" \n        }\n\n        //item.create(true) will force regeneration of the button\n        //Replace the current button so that the flow info shows \n        let elem = GetId(item.base + \"1\")\n        let expanded = item.expanded\n        console.log(expanded)\n        let replacement = item.create(true) //Update the version in cache\n        try {\n            elem.parentNode.replaceChild(replacement, elem)\n            //If the river was expanded before, keep it expanded\n            if (expanded) {\n                replacement.dispatchEvent(new Event(\"click\"))\n                //For some reason, the automatically opened buttons and the manually opened buttons behave different.\n                if (navigator.userAgent.toLowerCase().indexOf(\"google\") === -1) {\n                    replacement.dispatchEvent(new Event(\"click\"))\n                }\n            }\n        }\n        catch (e) {} //The list must have been sorted - the node was not currently in list\n      }\n    }\n    \n}"],"sourceRoot":""}